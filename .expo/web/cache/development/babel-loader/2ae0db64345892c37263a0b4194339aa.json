{"ast":null,"code":"import { NavigationContainer } from '@react-navigation/native';\nimport Navigation from \"../App\";\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { ImageBackgroundBase } from \"react-native-web/dist/index\";\nimport colors from \"../assets/colors/colors\";\nimport { FlatList, ScrollView, TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport recipesData from \"../data/recipeData\";\nimport styles from \"../assets/styles\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Fontisto from \"@expo/vector-icons/Fontisto\";\nimport { NavigationActions } from 'react-navigation';\nimport { BackgroundImage } from 'react-native-elements/dist/config';\nimport { color } from 'react-native-reanimated';\nimport { gray, grey } from 'chalk';\nvar log = console.log;\nLogBox.ignoreAllLogs();\nconsole.reportErrorsAsExceptions = false;\n\nvar Recipe = function Recipe(_ref) {\n  var route = _ref.route;\n  var recipe = route.params;\n  log('Recipe\\n\\n');\n  log(recipe.recipe);\n\n  var renderRecipe = function renderRecipe(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(Text, {\n      style: {\n        marginTop: 10,\n        marginBottom: 5,\n        color: '#7A7979',\n        fontWeight: 'bold'\n      }\n    }, \" \", item);\n  };\n\n  var loadInBrowser = function loadInBrowser(url) {\n    Linking.openURL(url).catch(function (err) {\n      return console.error(\"Couldn't load page\", err);\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      flex: 3\n    }\n  }, React.createElement(BackgroundImage, {\n    source: {\n      uri: recipe.recipe.images.LARGE.url\n    },\n    style: styles.recipePageImage\n  }), React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    style: {\n      bottom: 10,\n      borderRadius: 15,\n      backgroundColor: colors.white\n    }\n  }, React.createElement(View, null, React.createElement(Text, {\n    style: {\n      fontSize: 32,\n      fontWeight: \"bold\",\n      left: 10\n    }\n  }, recipe.recipe.label, \" \")), React.createElement(View, {\n    style: {\n      marginTop: 15,\n      left: 10,\n      flexDirection: 'row'\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 30\n    }\n  }, \"  Ingredients       \"), React.createElement(Text, {\n    style: {\n      marginTop: 13,\n      fontSize: 15\n    }\n  }, React.createElement(Fontisto, {\n    style: styles.timeIcon,\n    name: \"clock\"\n  }), \" \", recipe.recipe.totalTime, \" Mins \"), React.createElement(Text, {\n    style: {\n      marginTop: 13,\n      fontSize: 15\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    style: styles.appleIcon,\n    name: \"food-apple-outline\"\n  }), \" \", recipe.recipe.calories.toFixed(0), \" cal \")), React.createElement(View, {\n    style: {\n      marginTop: 10,\n      alignSelf: 'center',\n      alignContent: \"center\",\n      width: 350,\n      backgroundColor: \"#EBE9E9\",\n      borderRadius: 15\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      alignContent: 'center',\n      alignSelf: 'center'\n    },\n    data: recipe.recipe.ingredientLines,\n    renderItem: renderRecipe,\n    showsHorizontalScrollIndicator: false\n  }))), React.createElement(TouchableOpacity, {\n    style: {\n      alignContent: 'center',\n      alignItems: 'center',\n      height: 100,\n      width: '100%',\n      borderRadius: 10,\n      backgroundColor: colors.pink\n    },\n    onPress: function onPress() {\n      return loadInBrowser(recipe.recipe.url);\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginTop: 15,\n      fontSize: 36,\n      fontWeight: 'bold',\n      color: \"white\"\n    }\n  }, \"Start Cooking!\")));\n};\n\nexport default Recipe;","map":{"version":3,"sources":["/Users/kenleyrodriguez/OneDrive - Knights - University of Central Florida/Fall21/POOP/MeChefMobile/screens/Recipe.js"],"names":["NavigationContainer","Navigation","React","ImageBackgroundBase","colors","FlatList","ScrollView","TouchableHighlight","TouchableOpacity","SafeAreaView","recipesData","styles","Feather","MaterialIcons","MaterialCommunityIcons","Fontisto","NavigationActions","BackgroundImage","color","gray","grey","log","console","LogBox","ignoreAllLogs","reportErrorsAsExceptions","Recipe","route","recipe","params","renderRecipe","item","marginTop","marginBottom","fontWeight","loadInBrowser","url","Linking","openURL","catch","err","error","backgroundColor","flex","uri","images","LARGE","recipePageImage","bottom","borderRadius","white","fontSize","left","label","flexDirection","timeIcon","totalTime","appleIcon","calories","toFixed","alignSelf","alignContent","width","ingredientLines","alignItems","height","pink"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,OAAOC,UAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;;;SACiFC,mB;AACjF,OAAOC,MAAP;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,kBAA/B,EAAmDC,gBAAnD,QAA2E,8BAA3E;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,OAAOC,WAAP;AACA,OAAOC,MAAP;AAGA,OAAOC,OAAP;AACA,OAAOC,aAAP;AACA,OAAOC,sBAAP;AACA,OAAOC,QAAP;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,OAA3B;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAACD,GAApB;AAEAE,MAAM,CAACC,aAAP;AACAF,OAAO,CAACG,wBAAR,GAAmC,KAAnC;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;AACxB,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAArB;AAEAR,EAAAA,GAAG,CAAC,YAAD,CAAH;AACAA,EAAAA,GAAG,CAACO,MAAM,CAACA,MAAR,CAAH;;AAEA,MAAME,YAAY,GAAG,SAAfA,YAAe;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,WACjB,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AACTC,QAAAA,SAAS,EAAE,EADF;AAETC,QAAAA,YAAY,EAAE,CAFL;AAGTf,QAAAA,KAAK,EAAE,SAHE;AAITgB,QAAAA,UAAU,EAAE;AAJH;AAAb,YAKKH,IALL,CADiB;AAAA,GAArB;;AASA,MAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAS;AAC3BC,IAAAA,OAAO,CAACC,OAAR,CAAgBF,GAAhB,EAAqBG,KAArB,CAA2B,UAAAC,GAAG;AAAA,aAAIlB,OAAO,CAACmB,KAAR,CAAc,oBAAd,EAAoCD,GAApC,CAAJ;AAAA,KAA9B;AACH,GAFD;;AAIA,SAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTE,MAAAA,eAAe,EAAE,OADR;AAETC,MAAAA,IAAI,EAAC;AAFI;AAAb,KAII,oBAAC,eAAD;AACA,IAAA,MAAM,EAAE;AAACC,MAAAA,GAAG,EAAEhB,MAAM,CAACA,MAAP,CAAciB,MAAd,CAAqBC,KAArB,CAA2BV;AAAjC,KADR;AAEA,IAAA,KAAK,EAAEzB,MAAM,CAACoC;AAFd,IAJJ,EAYQ,oBAAC,UAAD;AACA,IAAA,4BAA4B,EAAE,KAD9B;AAEA,IAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE,EADL;AAGHC,MAAAA,YAAY,EAAE,EAHX;AAIHP,MAAAA,eAAe,EAAEtC,MAAM,CAAC8C;AAJrB;AAFP,KAQI,oBAAC,IAAD,QAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETjB,MAAAA,UAAU,EAAE,MAFH;AAGTkB,MAAAA,IAAI,EAAE;AAHG;AAAb,KAKExB,MAAM,CAACA,MAAP,CAAcyB,KALhB,MAFJ,CARJ,EAkBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTrB,MAAAA,SAAS,EAAE,EADF;AAEToB,MAAAA,IAAI,EAAE,EAFG;AAGTE,MAAAA,aAAa,EAAE;AAHN;AAAb,KAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTH,MAAAA,QAAQ,EAAE;AADD;AAAb,4BANJ,EAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACRnB,MAAAA,SAAS,EAAE,EADH;AAERmB,MAAAA,QAAQ,EAAE;AAFF;AAAb,KAGG,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAExC,MAAM,CAAC4C,QAAxB;AAAkC,IAAA,IAAI,EAAC;AAAvC,IAHH,OAGqD3B,MAAM,CAACA,MAAP,CAAc4B,SAHnE,WAXJ,EAeI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACRxB,MAAAA,SAAS,EAAE,EADH;AAERmB,MAAAA,QAAQ,EAAE;AAFF;AAAb,KAGG,oBAAC,sBAAD;AAAwB,IAAA,KAAK,EAAExC,MAAM,CAAC8C,SAAtC;AAAiD,IAAA,IAAI,EAAC;AAAtD,IAHH,OAGiF7B,MAAM,CAACA,MAAP,CAAc8B,QAAd,CAAuBC,OAAvB,CAA+B,CAA/B,CAHjF,UAfJ,CAlBJ,EAyCI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACT3B,MAAAA,SAAS,EAAC,EADD;AAET4B,MAAAA,SAAS,EAAE,QAFF;AAGTC,MAAAA,YAAY,EAAE,QAHL;AAITC,MAAAA,KAAK,EAAE,GAJE;AAKTpB,MAAAA,eAAe,EAAE,SALR;AAMTO,MAAAA,YAAY,EAAE;AANL;AAAb,KAUI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAE;AACHY,MAAAA,YAAY,EAAE,QADX;AAEHD,MAAAA,SAAS,EAAE;AAFR,KADX;AAKI,IAAA,IAAI,EAAEhC,MAAM,CAACA,MAAP,CAAcmC,eALxB;AAMI,IAAA,UAAU,EAAEjC,YANhB;AAQI,IAAA,8BAA8B,EAAE;AARpC,IAVJ,CAzCJ,CAZR,EA+EQ,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE;AAErB+B,MAAAA,YAAY,EAAE,QAFO;AAGrBG,MAAAA,UAAU,EAAE,QAHS;AAIrBC,MAAAA,MAAM,EAAE,GAJa;AAKrBH,MAAAA,KAAK,EAAE,MALc;AAMrBb,MAAAA,YAAY,EAAE,EANO;AAOrBP,MAAAA,eAAe,EAAEtC,MAAM,CAAC8D;AAPH,KAAzB;AASA,IAAA,OAAO,EAAG;AAAA,aAAI/B,aAAa,CAACP,MAAM,CAACA,MAAP,CAAcQ,GAAf,CAAjB;AAAA;AATV,KAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTJ,MAAAA,SAAS,EAAE,EADF;AAETmB,MAAAA,QAAQ,EAAE,EAFD;AAGTjB,MAAAA,UAAU,EAAE,MAHH;AAIThB,MAAAA,KAAK,EAAE;AAJE;AAAb,sBAXJ,CA/ER,CAFJ;AA4GH,CA/HD;;AAiIA,eAAeQ,MAAf","sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\nimport Navigation from '../App';\nimport React from 'react';\nimport {Image, LogBox, View, Linking, Text, Button, StyleSheet, ImageBackground, ImageBackgroundBase} from 'react-native';\nimport colors from '../assets/colors/colors'\nimport { FlatList, ScrollView, TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport recipesData from '../data/recipeData';\nimport styles from '../assets/styles';\n\n\nimport Feather from 'react-native-vector-icons/Feather';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Fontisto from 'react-native-vector-icons/Fontisto';\nimport { NavigationActions } from 'react-navigation';\nimport { BackgroundImage } from 'react-native-elements/dist/config';\nimport { color } from 'react-native-reanimated';\nimport { gray, grey } from 'chalk';\n\nconst log = console.log;\n\nLogBox.ignoreAllLogs();\nconsole.reportErrorsAsExceptions = false;\n\n// import { Colors } from 'react-native/Libraries/NewAppScreen';\n// import { baseProps } from 'react-native-gesture-handler/lib/typescript/handlers/gestureHandlers';\nconst Recipe = ({route}) => {\n    const recipe = route.params;\n\n    log('Recipe\\n\\n') \n    log(recipe.recipe);\n\n    const renderRecipe = ({ item }) => (\n        <Text style={{\n            marginTop: 10,\n            marginBottom: 5,\n            color: '#7A7979',\n            fontWeight: 'bold'\n        }}> {item}</Text>\n    );\n\n    const loadInBrowser = (url) => {\n        Linking.openURL(url).catch(err => console.error(\"Couldn't load page\", err));\n    };\n\n    return(\n        \n        <View style={{\n            backgroundColor: \"white\",\n            flex:3\n            }}>\n            <BackgroundImage\n            source={{uri: recipe.recipe.images.LARGE.url}}\n            style={styles.recipePageImage}\n            >\n                {/* <Text style={{\n                    color: \"white\",\n                }}>hello</Text> */}\n            </BackgroundImage>\n                <ScrollView\n                showsVerticalScrollIndicator={false}\n                style={{\n                    bottom: 10,\n                    // height: 500,\n                    borderRadius: 15,\n                    backgroundColor: colors.white,\n                }}>\n                    <View>\n\n                        <Text style={{\n                            fontSize: 32,\n                            fontWeight: \"bold\",\n                            left: 10,\n                        }}\n                        >{recipe.recipe.label} </Text>\n                    </View>\n\n                    <View style={{\n                        marginTop: 15,\n                        left: 10,\n                        flexDirection: 'row',\n                    }}>\n\n                        <Text style={{\n                            fontSize: 30,\n                        }}\n                        >  Ingredients       </Text>\n\n                        <Text style={{\n                             marginTop: 13,                            \n                             fontSize: 15,\n                        }}><Fontisto style={styles.timeIcon} name=\"clock\"/> {recipe.recipe.totalTime} Mins </Text>\n                        <Text style={{\n                             marginTop: 13,                            \n                             fontSize: 15,\n                        }}><MaterialCommunityIcons style={styles.appleIcon} name=\"food-apple-outline\"/> {recipe.recipe.calories.toFixed(0)} cal </Text>\n                    </View>\n\n\n\n                    <View style={{\n                        marginTop:10,\n                        alignSelf: 'center',\n                        alignContent: \"center\",\n                        width: 350,\n                        backgroundColor: \"#EBE9E9\",\n                        borderRadius: 15,\n                        \n                    }}>\n\n                        <FlatList\n                            style={{\n                                alignContent: 'center',\n                                alignSelf: 'center'\n                            }}\n                            data={recipe.recipe.ingredientLines}\n                            renderItem={renderRecipe}\n                            // keyExtractor={(item, navigation) => (item.id, navigation.navigate)}\n                            showsHorizontalScrollIndicator={false}\n                            />\n\n                    </View>\n                </ScrollView>\n\n\n\n                <TouchableOpacity style={{\n                    // top: ,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    height: 100,\n                    width: '100%',\n                    borderRadius: 10,\n                    backgroundColor: colors.pink,\n                }}\n                onPress={ ()=>loadInBrowser(recipe.recipe.url)}\n                >\n                    <Text style={{\n                        marginTop: 15,\n                        fontSize: 36,\n                        fontWeight: 'bold',\n                        color: \"white\",\n                    }}\n                    >\n                        Start Cooking!\n                    </Text>\n                </TouchableOpacity>\n\n\n            </View>\n\n    );\n\n};\n\nexport default Recipe;"]},"metadata":{},"sourceType":"module"}