{"ast":null,"code":"import { NavigationContainer } from '@react-navigation/native';\nimport Navigation from \"../App\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { ImageBackgroundBase } from \"react-native-web/dist/index\";\nimport colors from \"../assets/colors/colors\";\nimport { FlatList, ScrollView, TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport recipesData from \"../data/recipeData\";\nimport exploreData from \"../data/exploreData\";\nimport styles from \"../assets/styles\";\nimport FastImageView from 'react-native-fast-image';\nimport pantryData from \"../data/pantryData\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var renderRecipes = function renderRecipes(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Recipe', item);\n      }\n    }, React.createElement(ImageBackground, {\n      source: item.image,\n      style: styles.recipeItem,\n      imageStyle: styles.recipeItemImage\n    }, React.createElement(View, {\n      style: styles.recipeTitleUnderlay\n    }), React.createElement(View, null, React.createElement(Text, {\n      style: styles.recipeItemTitle\n    }, item.title))));\n  };\n\n  var renderPantry = function renderPantry(_ref3) {\n    var item = _ref3.item;\n    return React.createElement(TouchableOpacity, {\n      style: {\n        backgroundColor: colors.pink,\n        width: 150,\n        height: 40,\n        borderRadius: 20,\n        marginRight: 10,\n        justifyContent: 'center'\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: 'center',\n        color: colors.white\n      }\n    }, item.title));\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(ScrollView, null, React.createElement(SafeAreaView, null, React.createElement(View, null, React.createElement(Text, {\n    style: styles.titleText,\n    onPress: function onPress() {\n      return navigation.navigate('Pantry');\n    }\n  }, \" Your Pantry  \")), React.createElement(FlatList, {\n    data: pantryData,\n    renderItem: renderPantry,\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    style: {\n      marginLeft: 10,\n      top: 15\n    }\n  })), React.createElement(View, null, React.createElement(Text, {\n    style: styles.titleText,\n    onPress: function onPress() {\n      return navigation.navigate('Recipes');\n    }\n  }, \" Your Recipes \", React.createElement(MaterialIcons, {\n    style: styles.titleIcon,\n    name: \"arrow-forward-ios\"\n  }), \" \")), React.createElement(View, {\n    styles: styles.recipesWrapper\n  }, React.createElement(FlatList, {\n    data: recipesData,\n    renderItem: renderRecipes,\n    keyExtractor: function keyExtractor(item, navigation) {\n      return item.id, navigation.navigate;\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false\n  })), React.createElement(View, null, React.createElement(Text, {\n    style: styles.titleText,\n    onPress: function onPress() {\n      return navigation.navigate('Explore');\n    }\n  }, \" Explore \", React.createElement(MaterialIcons, {\n    style: styles.titleIcon,\n    name: \"arrow-forward-ios\"\n  }), \" \")), React.createElement(View, {\n    styles: styles.recipesWrapper\n  }, React.createElement(FlatList, {\n    styles: {\n      marginTop: 10\n    },\n    data: exploreData,\n    renderItem: renderRecipes,\n    keyExtractor: function keyExtractor(item, navigation) {\n      return item.id, navigation.navigate;\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/kenleyrodriguez/OneDrive - Knights - University of Central Florida/Fall21/POOP/MeChefMobile/screens/Home.js"],"names":["NavigationContainer","Navigation","React","ImageBackgroundBase","colors","FlatList","ScrollView","TouchableHighlight","TouchableOpacity","SafeAreaView","recipesData","exploreData","styles","FastImageView","pantryData","Feather","MaterialIcons","Colors","Home","navigation","renderRecipes","item","navigate","image","recipeItem","recipeItemImage","recipeTitleUnderlay","recipeItemTitle","title","renderPantry","backgroundColor","pink","width","height","borderRadius","marginRight","justifyContent","textAlign","color","white","container","titleText","marginLeft","top","titleIcon","recipesWrapper","id","marginTop"],"mappings":"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","sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\nimport Navigation from '../App';\nimport React from 'react';\nimport {View, Text, Button, StyleSheet, Image, ImageBackground, ImageBackgroundBase} from 'react-native';\nimport colors from '../assets/colors/colors'\nimport { FlatList, ScrollView, TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport recipesData from '../data/recipeData';\nimport exploreData from '../data/exploreData';\nimport styles from '../assets/styles';\nimport FastImageView from 'react-native-fast-image';\nimport pantryData from '../data/pantryData';\n\n// import renderRecipes from '../data/renderRecipes';\n\nimport Feather from 'react-native-vector-icons/Feather';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons'\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\n\n\n\n\nconst Home = ({navigation}) => {\n\n    const renderRecipes = ({item}) => {\n\n        return(\n    \n            <TouchableOpacity onPress={() => navigation.navigate('Recipe', item) } > \n                <ImageBackground\n                source ={item.image}\n                style={styles.recipeItem}\n                imageStyle={styles.recipeItemImage}\n                >\n                \n                    <View style={styles.recipeTitleUnderlay}></View>\n                    \n                    <View>\n                        <Text style={styles.recipeItemTitle}>{item.title}</Text>\n                    </View>\n    \n    \n    \n                </ImageBackground>\n            </TouchableOpacity>\n        )\n    };\n    \n    const renderPantry = ({item}) => {\n\n        return(\n            // <Text>{item.title}</Text>\n            <TouchableOpacity style={{\n                backgroundColor: colors.pink,\n                width: 150,\n                height: 40,\n                borderRadius: 20,\n                marginRight: 10,\n                justifyContent: 'center'\n            }}>\n                <Text style={{\n                    textAlign: 'center',\n                    color: colors.white\n                }}>{item.title}</Text>\n            </TouchableOpacity>\n        )\n\n    };\n\n    return(\n\n        <View style={styles.container}>\n\n            {/*Header */}\n            <ScrollView>\n\n                <SafeAreaView>\n                    <View>\n                        <Text style={styles.titleText} onPress={() => navigation.navigate('Pantry')}> Your Pantry  </Text>\n                    </View>\n\n                    <FlatList \n                    data={pantryData}\n                    renderItem={renderPantry}\n                    horizontal\n                    showsHorizontalScrollIndicator={false}\n                    style={{\n                        marginLeft: 10,\n                        top: 15\n                    }}> \n                    </FlatList>\n                </SafeAreaView>\n                \n\n                <View> \n                    <Text style={styles.titleText} onPress={() => navigation.navigate('Recipes')}> Your Recipes <MaterialIcons style={styles.titleIcon} name=\"arrow-forward-ios\"/> </Text>\n                </View>\n\n                <View styles={styles.recipesWrapper}>\n                    <FlatList\n                        data={recipesData}\n                        renderItem={renderRecipes}\n                        keyExtractor={(item, navigation) => (item.id, navigation.navigate)}\n                        horizontal\n                        showsHorizontalScrollIndicator={false}\n                    />\n\n                </View>\n\n\n\n\n                <View> \n                    <Text style={styles.titleText} onPress={() => navigation.navigate('Explore')} > Explore <MaterialIcons style={styles.titleIcon} name=\"arrow-forward-ios\"/> </Text>\n                </View>\n\n                <View styles={styles.recipesWrapper}>\n                        <FlatList\n                            styles={{marginTop: 10}}\n                            data={exploreData}\n                            renderItem={renderRecipes}\n                            keyExtractor={(item, navigation) => (item.id, navigation.navigate)}\n                            horizontal\n                            showsHorizontalScrollIndicator={false}\n                        />\n\n                </View>\n\n\n            </ScrollView>\n        </View>\n\n    );\n\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}