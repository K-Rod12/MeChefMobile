{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport Navigation from \"../App\";\nimport React, { useState, useEffect, Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { ImageBackgroundBase } from \"react-native-web/dist/index\";\nimport colors from \"../assets/colors/colors\";\nimport { FlatList, ScrollView, TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport recipesData from \"../data/recipeData\";\nimport exploreData from \"../data/exploreData\";\nimport styles from \"../assets/styles\";\nimport FastImageView from 'react-native-fast-image';\nimport pantryData from \"../data/pantryData\";\nimport BlurOverlay, { closeOverlay, openOverlay } from 'react-native-blur-overlay';\nimport Feather from \"@expo/vector-icons/Feather\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\nvar log = console.log;\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var user = route.params;\n  var count = Object.keys(user[0].Ingredient_List).length;\n  var key = '&app_id=b3ff7aac&app_key=5ae74af09f6c48e7e1f444dcd524091a&imageSize=LARGE&time=1-50&random=true';\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      recipes = _useState2[0],\n      setRecipes = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      appleRecipes = _useState4[0],\n      setAppleRecipes = _useState4[1];\n\n  var testURL = 'https://api.edamam.com/api/recipes/v2?type=public&q=apple&app_id=b3ff7aac&app_key=5ae74af09f6c48e7e1f444dcd524091a&&time=1-50&imageSize=LARGE&random=false';\n  var recipeURL = 'https://api.edamam.com/api/recipes/v2?type=public&q=';\n  var str = 'frog legs';\n  var test = str.replace(/ /g, '%20');\n  log(str);\n  log(test);\n\n  for (var i = 2; i < count; i++) {\n    if (i < count - 1) {\n      recipeURL += user[0].Ingredient_List[i].Name.replace(/ /g, '%20') + '%20';\n    } else {\n      recipeURL += user[0].Ingredient_List[i].Name.replace(/ /g, '%20');\n    }\n  }\n\n  recipeURL += key;\n  useEffect(function () {\n    fetch(recipeURL, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      if (!responseJson.error) {\n        recipes = setRecipes(responseJson.hits);\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n    fetch(testURL, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      if (!responseJson.error) {\n        appleRecipes = setAppleRecipes(responseJson.hits);\n        log('\\n\\nRecipes\\n\\n');\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n    var apples = setAppleRecipes(appleRecipes[2]);\n  }, []);\n\n  var renderRecipes = function renderRecipes(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Recipe', item);\n      }\n    }, React.createElement(ImageBackground, {\n      source: {\n        uri: item.recipe.image\n      },\n      style: styles.recipeItem,\n      imageStyle: styles.recipeItemImage\n    }, React.createElement(BlurOverlay, {\n      style: styles.recipeTitleBlur,\n      customStyles: {\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      blurStyle: \"dark\"\n    }), React.createElement(View, {\n      style: styles.recipeTitleUnderlay\n    }), React.createElement(View, null, React.createElement(Text, {\n      style: styles.recipeItemTitle,\n      numberOfLines: 2\n    }, item.recipe.label))));\n  };\n\n  var renderExplore = function renderExplore(_ref3) {\n    var item = _ref3.item;\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Recipe', item);\n      }\n    }, React.createElement(ImageBackground, {\n      source: item.image,\n      style: styles.recipeItem,\n      imageStyle: styles.recipeItemImage\n    }, React.createElement(BlurOverlay, {\n      style: styles.recipeTitleBlur,\n      customStyles: {\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      blurStyle: \"dark\"\n    }), React.createElement(View, {\n      style: styles.recipeTitleUnderlay\n    }), React.createElement(View, null, React.createElement(Text, {\n      style: styles.recipeItemTitle\n    }, item.title))));\n  };\n\n  var renderPantry = function renderPantry(_ref4) {\n    var item = _ref4.item;\n    return React.createElement(TouchableOpacity, {\n      style: {\n        backgroundColor: colors.pink,\n        width: 150,\n        height: 40,\n        borderRadius: 20,\n        marginRight: 10,\n        justifyContent: 'center'\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: 'center',\n        color: colors.white\n      }\n    }, item.Name));\n  };\n\n  log('\\n\\nRecipes\\n\\n');\n  log(appleRecipes);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(ScrollView, null, React.createElement(View, {\n    style: {\n      marginTop: 40\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    onPress: function onPress() {\n      return navigation.navigate('Pantry', user);\n    }\n  }, \" Your Pantry \"), React.createElement(MaterialIcons, {\n    style: styles.titleIcon,\n    name: \"arrow-forward-ios\"\n  })), React.createElement(FlatList, {\n    data: user[0].Ingredient_List,\n    renderItem: renderPantry,\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    style: {\n      marginLeft: 5,\n      marginTop: 10,\n      marginBottom: 10\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    onPress: function onPress() {\n      return navigation.navigate('Recipes');\n    }\n  }, \" Your Recipes \"), React.createElement(MaterialIcons, {\n    style: styles.titleIcon,\n    name: \"arrow-forward-ios\"\n  })), React.createElement(View, {\n    styles: styles.recipesWrapper\n  }, React.createElement(FlatList, {\n    data: (recipes, appleRecipes),\n    renderItem: renderRecipes,\n    keyExtractor: function keyExtractor(item, navigation) {\n      return item.id, navigation.navigate;\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    onPress: function onPress() {\n      return navigation.navigate('Explore');\n    }\n  }, \" Explore \"), React.createElement(MaterialIcons, {\n    style: styles.titleIcon,\n    name: \"arrow-forward-ios\"\n  })), React.createElement(View, {\n    styles: styles.recipesWrapper\n  }, React.createElement(FlatList, {\n    styles: {\n      marginTop: 10\n    },\n    data: exploreData,\n    renderItem: renderExplore,\n    keyExtractor: function keyExtractor(item, navigation) {\n      return item.id, navigation.navigate;\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/kenleyrodriguez/OneDrive - Knights - University of Central Florida/Fall21/POOP/MeChefMobile/screens/Home.js"],"names":["NavigationContainer","Navigation","React","useState","useEffect","Component","ImageBackgroundBase","colors","FlatList","ScrollView","TouchableHighlight","TouchableOpacity","SafeAreaView","recipesData","exploreData","styles","FastImageView","pantryData","BlurOverlay","closeOverlay","openOverlay","Feather","MaterialIcons","Colors","log","console","Home","navigation","route","user","params","count","Object","keys","Ingredient_List","length","key","recipes","setRecipes","appleRecipes","setAppleRecipes","testURL","recipeURL","str","test","replace","i","Name","fetch","method","headers","then","response","json","responseJson","error","hits","catch","apples","renderRecipes","item","navigate","uri","recipe","image","recipeItem","recipeItemImage","recipeTitleBlur","alignItems","justifyContent","recipeTitleUnderlay","recipeItemTitle","label","renderExplore","title","renderPantry","backgroundColor","pink","width","height","borderRadius","marginRight","textAlign","color","white","container","marginTop","flexDirection","titleText","titleIcon","marginLeft","marginBottom","recipesWrapper","id"],"mappings":";AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,OAAOC,UAAP;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,SAApC,QAAoD,OAApD;;;;;;;SACgEC,mB;AAChE,OAAOC,MAAP;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,kBAA/B,EAAmDC,gBAAnD,QAA2E,8BAA3E;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,MAAP;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP,IAAoBC,YAApB,EAAiCC,WAAjC,QAAmD,2BAAnD;AAGA,OAAOC,OAAP;AACA,OAAOC,aAAP;AACA,SAASC,MAAT,QAAuB,qCAAvB;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAACD,GAApB;;AAEA,IAAME,IAAI,GAAG,SAAPA,IAAO,OAAyB;AAAA,MAAvBC,UAAuB,QAAvBA,UAAuB;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAnB;AACA,MAAIC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAAC,CAAD,CAAJ,CAAQK,eAApB,EAAqCC,MAAjD;AACA,MAAMC,GAAG,GAAG,iGAAZ;;AACA,kBAA4BjC,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAKkC,OAAL;AAAA,MAAcC,UAAd;;AACA,mBAAsCnC,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAKoC,YAAL;AAAA,MAAmBC,eAAnB;;AAIA,MAAIC,OAAO,GAAG,4JAAd;AACA,MAAIC,SAAS,GAAG,sDAAhB;AAEA,MAAMC,GAAG,GAAG,WAAZ;AACA,MAAIC,IAAI,GAAGD,GAAG,CAACE,OAAJ,CAAY,IAAZ,EAAkB,KAAlB,CAAX;AAEArB,EAAAA,GAAG,CAACmB,GAAD,CAAH;AACAnB,EAAAA,GAAG,CAACoB,IAAD,CAAH;;AAEA,OAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGf,KAAnB,EAA0Be,CAAC,EAA3B,EAA+B;AAC3B,QAAGA,CAAC,GAAGf,KAAK,GAAG,CAAf,EAAkB;AACdW,MAAAA,SAAS,IAAIb,IAAI,CAAC,CAAD,CAAJ,CAAQK,eAAR,CAAwBY,CAAxB,EAA2BC,IAA3B,CAAgCF,OAAhC,CAAwC,IAAxC,EAA8C,KAA9C,IAAuD,KAApE;AACH,KAFD,MAEK;AACDH,MAAAA,SAAS,IAAIb,IAAI,CAAC,CAAD,CAAJ,CAAQK,eAAR,CAAwBY,CAAxB,EAA2BC,IAA3B,CAAgCF,OAAhC,CAAwC,IAAxC,EAA8C,KAA9C,CAAb;AACH;AACJ;;AAEDH,EAAAA,SAAS,IAAIN,GAAb;AAGAhC,EAAAA,SAAS,CAAC,YAAM;AACZ4C,IAAAA,KAAK,CAACN,SAAD,EAAY;AACbO,MAAAA,MAAM,EAAE,KADK;AAGbC,MAAAA,OAAO,EAAE;AAET,kBACI;AAHK;AAHI,KAAZ,CAAL,CASKC,IATL,CASU,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KATV,EAWKF,IAXL,CAWU,UAACG,YAAD,EAAkB;AACpB,UAAI,CAACA,YAAY,CAACC,KAAlB,EACA;AAEIlB,QAAAA,OAAO,GAAGC,UAAU,CAACgB,YAAY,CAACE,IAAd,CAApB;AACH;AACJ,KAjBL,EAmBKC,KAnBL,CAmBW,UAACF,KAAD,EAAW;AAElB9B,MAAAA,OAAO,CAAC8B,KAAR,CAAcA,KAAd;AAEC,KAvBL;AAwBIP,IAAAA,KAAK,CAACP,OAAD,EAAU;AACXQ,MAAAA,MAAM,EAAE,KADG;AAGXC,MAAAA,OAAO,EAAE;AAET,kBACI;AAHK;AAHE,KAAV,CAAL,CASKC,IATL,CASU,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KATV,EAWKF,IAXL,CAWU,UAACG,YAAD,EAAkB;AACpB,UAAI,CAACA,YAAY,CAACC,KAAlB,EACA;AAEIhB,QAAAA,YAAY,GAAGC,eAAe,CAACc,YAAY,CAACE,IAAd,CAA9B;AACAhC,QAAAA,GAAG,CAAC,iBAAD,CAAH;AAGH;AACJ,KApBL,EAsBKiC,KAtBL,CAsBW,UAACF,KAAD,EAAW;AAElB9B,MAAAA,OAAO,CAAC8B,KAAR,CAAcA,KAAd;AAEC,KA1BL;AA2BI,QAAIG,MAAM,GAAGlB,eAAe,CAACD,YAAY,CAAC,CAAD,CAAb,CAA5B;AAEX,GAtDQ,EAsDN,EAtDM,CAAT;;AAyDA,MAAMoB,aAAa,GAAG,SAAhBA,aAAgB,QAAY;AAAA,QAAVC,IAAU,SAAVA,IAAU;AAI9B,WAEI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAMjC,UAAU,CAACkC,QAAX,CAAoB,QAApB,EAA8BD,IAA9B,CAAN;AAAA;AAA3B,OACI,oBAAC,eAAD;AACA,MAAA,MAAM,EAAG;AAACE,QAAAA,GAAG,EAAEF,IAAI,CAACG,MAAL,CAAYC;AAAlB,OADT;AAEA,MAAA,KAAK,EAAEjD,MAAM,CAACkD,UAFd;AAGA,MAAA,UAAU,EAAElD,MAAM,CAACmD;AAHnB,OAMA,oBAAC,WAAD;AACI,MAAA,KAAK,EAAEnD,MAAM,CAACoD,eADlB;AAEI,MAAA,YAAY,EAAE;AAACC,QAAAA,UAAU,EAAE,QAAb;AAAuBC,QAAAA,cAAc,EAAE;AAAvC,OAFlB;AAGI,MAAA,SAAS,EAAC;AAHd,MANA,EAWI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEtD,MAAM,CAACuD;AAApB,MAXJ,EAaI,oBAAC,IAAD,QACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEvD,MAAM,CAACwD,eAApB;AAAqC,MAAA,aAAa,EAAE;AAApD,OAAyDX,IAAI,CAACG,MAAL,CAAYS,KAArE,CADJ,CAbJ,CADJ,CAFJ;AAuBH,GA3BD;;AA6BA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,QAAY;AAAA,QAAVb,IAAU,SAAVA,IAAU;AAC9B,WAEI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAMjC,UAAU,CAACkC,QAAX,CAAoB,QAApB,EAA8BD,IAA9B,CAAN;AAAA;AAA3B,OACI,oBAAC,eAAD;AACA,MAAA,MAAM,EAAGA,IAAI,CAACI,KADd;AAEA,MAAA,KAAK,EAAEjD,MAAM,CAACkD,UAFd;AAGA,MAAA,UAAU,EAAElD,MAAM,CAACmD;AAHnB,OAMA,oBAAC,WAAD;AACI,MAAA,KAAK,EAAEnD,MAAM,CAACoD,eADlB;AAEI,MAAA,YAAY,EAAE;AAACC,QAAAA,UAAU,EAAE,QAAb;AAAuBC,QAAAA,cAAc,EAAE;AAAvC,OAFlB;AAGI,MAAA,SAAS,EAAC;AAHd,MANA,EAWI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEtD,MAAM,CAACuD;AAApB,MAXJ,EAaI,oBAAC,IAAD,QACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEvD,MAAM,CAACwD;AAApB,OAAsCX,IAAI,CAACc,KAA3C,CADJ,CAbJ,CADJ,CAFJ;AAuBH,GAxBD;;AA0BA,MAAMC,YAAY,GAAG,SAAfA,YAAe,QAAY;AAAA,QAAVf,IAAU,SAAVA,IAAU;AAE7B,WAEI,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE;AACrBgB,QAAAA,eAAe,EAAErE,MAAM,CAACsE,IADH;AAErBC,QAAAA,KAAK,EAAE,GAFc;AAGrBC,QAAAA,MAAM,EAAE,EAHa;AAIrBC,QAAAA,YAAY,EAAE,EAJO;AAKrBC,QAAAA,WAAW,EAAE,EALQ;AAMrBZ,QAAAA,cAAc,EAAE;AANK;AAAzB,OAQI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AACTa,QAAAA,SAAS,EAAE,QADF;AAETC,QAAAA,KAAK,EAAE5E,MAAM,CAAC6E;AAFL;AAAb,OAGIxB,IAAI,CAACb,IAHT,CARJ,CAFJ;AAiBH,GAnBD;;AAqBJvB,EAAAA,GAAG,CAAC,iBAAD,CAAH;AAEAA,EAAAA,GAAG,CAACe,YAAD,CAAH;AAEI,SAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExB,MAAM,CAACsE;AAApB,KAGI,oBAAC,UAAD,QAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTC,MAAAA,SAAS,EAAE;AADF;AAAb,KAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTC,MAAAA,aAAa,EAAE;AADN;AAAb,KAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExE,MAAM,CAACyE,SAApB;AAA+B,IAAA,OAAO,EAAE;AAAA,aAAM7D,UAAU,CAACkC,QAAX,CAAoB,QAApB,EAA8BhC,IAA9B,CAAN;AAAA;AAAxC,qBAHJ,EAII,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEd,MAAM,CAAC0E,SAA7B;AAAwC,IAAA,IAAI,EAAC;AAA7C,IAJJ,CAJJ,EAWI,oBAAC,QAAD;AACA,IAAA,IAAI,EAAE5D,IAAI,CAAC,CAAD,CAAJ,CAAQK,eADd;AAEA,IAAA,UAAU,EAAEyC,YAFZ;AAGA,IAAA,UAAU,MAHV;AAIA,IAAA,8BAA8B,EAAE,KAJhC;AAKA,IAAA,KAAK,EAAE;AACHe,MAAAA,UAAU,EAAE,CADT;AAEHJ,MAAAA,SAAS,EAAE,EAFR;AAGHK,MAAAA,YAAY,EAAE;AAHX;AALP,IAXJ,CAFJ,EA2BI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACLJ,MAAAA,aAAa,EAAE;AADV;AAAb,KAGQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExE,MAAM,CAACyE,SAApB;AAA+B,IAAA,OAAO,EAAE;AAAA,aAAM7D,UAAU,CAACkC,QAAX,CAAoB,SAApB,CAAN;AAAA;AAAxC,sBAHR,EAIQ,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE9C,MAAM,CAAC0E,SAA7B;AAAwC,IAAA,IAAI,EAAC;AAA7C,IAJR,CA3BJ,EA6CI,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAE1E,MAAM,CAAC6E;AAArB,KACI,oBAAC,QAAD;AACI,IAAA,IAAI,GAAEvD,OAAO,EAAEE,YAAX,CADR;AAEI,IAAA,UAAU,EAAEoB,aAFhB;AAGI,IAAA,YAAY,EAAE,sBAACC,IAAD,EAAOjC,UAAP;AAAA,aAAuBiC,IAAI,CAACiC,EAAL,EAASlE,UAAU,CAACkC,QAA3C;AAAA,KAHlB;AAII,IAAA,UAAU,MAJd;AAKI,IAAA,8BAA8B,EAAE;AALpC,IADJ,CA7CJ,EA0DI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACL0B,MAAAA,aAAa,EAAE;AADV;AAAb,KAGQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExE,MAAM,CAACyE,SAApB;AAA+B,IAAA,OAAO,EAAE;AAAA,aAAM7D,UAAU,CAACkC,QAAX,CAAoB,SAApB,CAAN;AAAA;AAAxC,iBAHR,EAIQ,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE9C,MAAM,CAAC0E,SAA7B;AAAwC,IAAA,IAAI,EAAC;AAA7C,IAJR,CA1DJ,EAkEI,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAE1E,MAAM,CAAC6E;AAArB,KACQ,oBAAC,QAAD;AACI,IAAA,MAAM,EAAE;AAACN,MAAAA,SAAS,EAAE;AAAZ,KADZ;AAEI,IAAA,IAAI,EAAExE,WAFV;AAGI,IAAA,UAAU,EAAE2D,aAHhB;AAII,IAAA,YAAY,EAAE,sBAACb,IAAD,EAAOjC,UAAP;AAAA,aAAuBiC,IAAI,CAACiC,EAAL,EAASlE,UAAU,CAACkC,QAA3C;AAAA,KAJlB;AAKI,IAAA,UAAU,MALd;AAMI,IAAA,8BAA8B,EAAE;AANpC,IADR,CAlEJ,CAHJ,CAFJ;AAyFH,CA/PD;;AAiQA,eAAenC,IAAf","sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\nimport Navigation from '../App';\nimport React, {useState, useEffect, Component} from 'react';\nimport {View, Text, Button, StyleSheet, Image, ImageBackground, ImageBackgroundBase} from 'react-native';\nimport colors from '../assets/colors/colors'\nimport { FlatList, ScrollView, TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport recipesData from '../data/recipeData';\nimport exploreData from '../data/exploreData';\nimport styles from '../assets/styles';\nimport FastImageView from 'react-native-fast-image';\nimport pantryData from '../data/pantryData';\nimport BlurOverlay,{closeOverlay,openOverlay} from 'react-native-blur-overlay'\n// import renderRecipes from '../data/renderRecipes';\n\nimport Feather from 'react-native-vector-icons/Feather';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons'\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\n\nconst log = console.log;\n\nconst Home = ({navigation, route}) => {\n    const user = route.params;\n    var count = Object.keys(user[0].Ingredient_List).length;\n    const key = '&app_id=b3ff7aac&app_key=5ae74af09f6c48e7e1f444dcd524091a&imageSize=LARGE&time=1-50&random=true'\n    var [recipes, setRecipes] = useState([]);\n    var [appleRecipes, setAppleRecipes] = useState([]);\n\n    \n    // const testURL = 'https://api.spoonacular.com/recipes/findByIngredients?ingredients=apples,+flour,+sugar&number=2&apiKey=5e11b97982854510823bc74ed70c95ba';\n    var testURL = 'https://api.edamam.com/api/recipes/v2?type=public&q=apple&app_id=b3ff7aac&app_key=5ae74af09f6c48e7e1f444dcd524091a&&time=1-50&imageSize=LARGE&random=false';\n    var recipeURL = 'https://api.edamam.com/api/recipes/v2?type=public&q='; //Bananas%20Apple&app_id=b3ff7aac&app_key=5ae74af09f6c48e7e1f444dcd524091a&health=alcohol-cocktail&imageSize=REGULAR&random=false';\n\n    const str = 'frog legs'\n    var test = str.replace(/ /g, '%20');\n    \n    log(str);\n    log(test)\n\n    for(var i = 2; i < count; i++ ){\n        if(i < count - 1 ){\n            recipeURL += user[0].Ingredient_List[i].Name.replace(/ /g, '%20') + '%20';\n        }else{\n            recipeURL += user[0].Ingredient_List[i].Name.replace(/ /g, '%20');\n        }\n    }\n    \n    recipeURL += key;\n    \n\n    useEffect(() => {\n        fetch(recipeURL, {\n            method: 'GET', //Request Type\n            // body: JSON.stringify(dataToSend), //post body\n            headers: {\n            //Header Defination\n            'Accept': \n                'application/json',\n            },\n        })\n            .then((response) => response.json())\n            //If response is in json then in success\n            .then((responseJson) => {\n                if (!responseJson.error)\n                {\n                    // recipes = setRecipes(responseJson);\n                    recipes = setRecipes(responseJson.hits);\n                }\n            })\n            //If response is not in json then in error\n            .catch((error) => {\n            //alert(JSON.stringify(error));\n            console.error(error);\n            // navigation.navigate('LoginScreen');\n            });\n            fetch(testURL, {\n                method: 'GET', //Request Type\n                // body: JSON.stringify(dataToSend), //post body\n                headers: {\n                //Header Defination\n                'Accept': \n                    'application/json',\n                },\n            })\n                .then((response) => response.json())\n                //If response is in json then in success\n                .then((responseJson) => {\n                    if (!responseJson.error)\n                    {\n                        // recipes = setRecipes(responseJson);\n                        appleRecipes = setAppleRecipes(responseJson.hits);\n                        log('\\n\\nRecipes\\n\\n')\n    \n    \n                    }\n                })\n                //If response is not in json then in error\n                .catch((error) => {\n                //alert(JSON.stringify(error));\n                console.error(error);\n                // navigation.navigate('LoginScreen');\n                });\n                var apples = setAppleRecipes(appleRecipes[2])\n            \n    }, [])\n\n    \n    const renderRecipes = ({item}) => {\n\n        //log(item)\n\n        return(\n    \n            <TouchableOpacity onPress={() => navigation.navigate('Recipe', item) } > \n                <ImageBackground\n                source ={{uri: item.recipe.image}}\n                style={styles.recipeItem}\n                imageStyle={styles.recipeItemImage}\n                >\n\n                <BlurOverlay\n                    style={styles.recipeTitleBlur}\n                    customStyles={{alignItems: 'center', justifyContent: 'center'}}\n                    blurStyle=\"dark\"\n                />                \n                    <View style={styles.recipeTitleUnderlay}></View>\n                    \n                    <View>\n                        <Text style={styles.recipeItemTitle} numberOfLines={2} >{item.recipe.label}</Text>\n                    </View>\n    \n                </ImageBackground>\n            </TouchableOpacity>\n        )\n    };\n\n    const renderExplore = ({item}) => {\n        return(\n    \n            <TouchableOpacity onPress={() => navigation.navigate('Recipe', item) } > \n                <ImageBackground\n                source ={item.image}\n                style={styles.recipeItem}\n                imageStyle={styles.recipeItemImage}\n                >\n\n                <BlurOverlay\n                    style={styles.recipeTitleBlur}\n                    customStyles={{alignItems: 'center', justifyContent: 'center'}}\n                    blurStyle=\"dark\"\n                />                \n                    <View style={styles.recipeTitleUnderlay}></View>\n                    \n                    <View>\n                        <Text style={styles.recipeItemTitle}>{item.title}</Text>\n                    </View>\n    \n                </ImageBackground>\n            </TouchableOpacity>\n        )\n    };\n    \n    const renderPantry = ({item}) => {\n\n        return(\n            // <Text>{item.title}</Text>\n            <TouchableOpacity style={{\n                backgroundColor: colors.pink,\n                width: 150,\n                height: 40,\n                borderRadius: 20,\n                marginRight: 10,\n                justifyContent: 'center'\n            }}>\n                <Text style={{\n                    textAlign: 'center',\n                    color: colors.white\n                }}>{item.Name}</Text>\n            </TouchableOpacity>\n        )\n\n    };\n\nlog('\\n\\nRecipes\\n\\n')\n\nlog(appleRecipes);\n\n    return(\n\n        <View style={styles.container}>\n\n            {/*Header */}\n            <ScrollView>\n\n                <View style={{\n                    marginTop: 40\n                }}\n                >\n                    <View style={{\n                        flexDirection: 'row'\n                    }}>\n                        <Text style={styles.titleText} onPress={() => navigation.navigate('Pantry', user)}> Your Pantry </Text>\n                        <MaterialIcons style={styles.titleIcon} name=\"arrow-forward-ios\"/>\n                    </View>\n\n                    <FlatList \n                    data={user[0].Ingredient_List}\n                    renderItem={renderPantry}\n                    horizontal\n                    showsHorizontalScrollIndicator={false}\n                    style={{\n                        marginLeft: 5,\n                        marginTop: 10,\n                        marginBottom: 10\n                    }}> \n                    </FlatList>\n                </View>\n                \n\n                <View style={{\n                        flexDirection: 'row'\n                    }}>\n                        <Text style={styles.titleText} onPress={() => navigation.navigate('Recipes')}> Your Recipes </Text>\n                        <MaterialIcons style={styles.titleIcon} name=\"arrow-forward-ios\"/>\n                    </View>\n\n\n                {/* <View styles={styles.recipesWrapper}>\n                    <FlatList\n                        data={recipes[0]}\n                        renderItem={renderExplore}\n                        keyExtractor={(item, navigation) => (item.id, navigation.navigate)}\n                        horizontal\n                        showsHorizontalScrollIndicator={false}\n                    />\n\n                </View> */}\n                <View styles={styles.recipesWrapper}>\n                    <FlatList\n                        data={recipes, appleRecipes} //appleRecipes.hits}\n                        renderItem={renderRecipes}\n                        keyExtractor={(item, navigation) => (item.id, navigation.navigate)}\n                        horizontal\n                        showsHorizontalScrollIndicator={false}\n                    />\n\n                </View>\n\n\n\n                <View style={{\n                        flexDirection: 'row'\n                    }}>\n                        <Text style={styles.titleText} onPress={() => navigation.navigate('Explore')}> Explore </Text>\n                        <MaterialIcons style={styles.titleIcon} name=\"arrow-forward-ios\"/>\n                </View>\n\n\n                <View styles={styles.recipesWrapper}>\n                        <FlatList\n                            styles={{marginTop: 10}}\n                            data={exploreData}\n                            renderItem={renderExplore}\n                            keyExtractor={(item, navigation) => (item.id, navigation.navigate)}\n                            horizontal\n                            showsHorizontalScrollIndicator={false}\n                        />\n\n                </View>\n\n\n            </ScrollView>\n        </View>\n\n    );\n\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}