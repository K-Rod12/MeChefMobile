{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport Navigation from \"../App\";\nimport React, { useState, useEffect } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { ImageBackgroundBase } from \"react-native-web/dist/index\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport colors from \"../assets/colors/colors\";\nimport { FlatList, ScrollView, TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport recipesData from \"../data/recipeData\";\nimport styles from \"../assets/styles\";\nimport BlurOverlay from 'react-native-blur-overlay';\nimport Feather from \"@expo/vector-icons/Feather\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\nvar url = 'http://mechef.zapto.org/api/login';\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      user = _useState6[0],\n      setUser = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ingredients = _useState8[0],\n      setIngredients = _useState8[1];\n\n  state = {\n    username: '',\n    password: '',\n    ingredients: []\n  };\n\n  var doLogin = function doLogin() {\n    var dataToSend = {\n      login: username,\n      password: password\n    };\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(dataToSend),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      if (!responseJson.error) {\n        user = responseJson;\n        navigation.navigate('TabNavigator', {\n          screen: 'Home',\n          params: user\n        });\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(SafeAreaView, {\n    styles: {\n      top: 60,\n      alignItems: 'center'\n    }\n  }, React.createElement(Image, {\n    style: {\n      marginTop: 50,\n      alignSelf: 'center',\n      width: 150,\n      height: 110,\n      resizeMode: 'contain'\n    },\n    source: require(\"../images/MeChefLogo.png\")\n  }), React.createElement(View, {\n    style: {\n      top: 50\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 25,\n      textAlign: 'center',\n      fontWeight: 'bold'\n    }\n  }, \"Please log into your MeChef account\"), React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      paddingLeft: 50,\n      paddingRight: 50,\n      fontSize: 18\n    }\n  })), React.createElement(SafeAreaView, null, React.createElement(KeyboardAvoidingView, {\n    behavior: \"position\",\n    style: {\n      alignItems: 'center'\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      borderColor: \"gray\",\n      width: 320,\n      borderWidth: 0.5,\n      borderRadius: 8,\n      padding: 10,\n      justifyContent: 'center',\n      alignSelf: 'center',\n      marginBottom: 10\n    },\n    placeholder: \"Username\",\n    onChangeText: function onChangeText(username) {\n      return setUsername(username);\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      borderColor: \"gray\",\n      width: 320,\n      borderWidth: 0.5,\n      borderRadius: 8,\n      padding: 10,\n      justifyContent: 'center',\n      alignSelf: 'center',\n      marginBottom: 10\n    },\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    secureTextEntry: true\n  }), React.createElement(TouchableOpacity, {\n    onPress: doLogin,\n    style: {\n      width: 320,\n      height: 46,\n      backgroundColor: '#FFB9B9',\n      borderRadius: 100,\n      justifyContent: 'center',\n      alignSelf: 'center'\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      justifyContent: 'center',\n      alignSelf: 'center',\n      color: 'white'\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('EmailVerification');\n    },\n    style: {\n      color: '#FFB9B9',\n      justifyContent: 'center',\n      alignSelf: 'center'\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      justifyContent: 'center',\n      alignSelf: 'center',\n      color: 'blue'\n    }\n  }, \"Forgot your password?\"))))));\n};\n\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/kenleyrodriguez/OneDrive - Knights - University of Central Florida/Fall21/POOP/MeChefMobile/screens/LoginScreen.js"],"names":["NavigationContainer","Navigation","React","useState","useEffect","ImageBackgroundBase","colors","FlatList","ScrollView","TouchableHighlight","TouchableOpacity","SafeAreaView","recipesData","styles","BlurOverlay","Feather","MaterialIcons","Colors","url","LoginScreen","navigation","username","setUsername","password","setPassword","user","setUser","ingredients","setIngredients","state","doLogin","dataToSend","login","fetch","method","body","JSON","stringify","headers","then","response","json","responseJson","error","navigate","screen","params","catch","console","container","top","alignItems","marginTop","alignSelf","width","height","resizeMode","require","fontSize","textAlign","fontWeight","paddingLeft","paddingRight","borderColor","borderWidth","borderRadius","padding","justifyContent","marginBottom","backgroundColor","color"],"mappings":"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","sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\nimport Navigation from '../App';\nimport React, {useState, useEffect} from 'react';\nimport {Keyboard, View, Text, Button, StyleSheet, Image, ImageBackground, ImageBackgroundBase, Alert, TextInput, KeyboardAvoidingView, ActivityIndicator} from 'react-native';\nimport colors from '../assets/colors/colors'\nimport { FlatList, ScrollView, TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport recipesData from '../data/recipeData';\nimport styles from '../assets/styles';\nimport BlurOverlay from 'react-native-blur-overlay';\n// import axios from 'axios';\nimport Feather from 'react-native-vector-icons/Feather';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons'\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\n\nconst url = 'http://mechef.zapto.org/api/login';\n\nconst LoginScreen = ({navigation}) => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    var [user, setUser] = useState([]);\n    const [ingredients, setIngredients] = useState();\n    // state = {\n    //     keyboardOffset: 0,\n    //     username: '',\n    //     password: '',\n    //     isLogginIn: false,\n    //     message: ''\n    // }\n\n    state = {\n        username: '',\n        password: '',\n        ingredients: [],\n    }\n    \n    const doLogin = () => {\n        //POST json\n        var dataToSend = {login: username, password: password};\n        //POST request\n        fetch(url, {\n          method: 'POST', //Request Type\n          body: JSON.stringify(dataToSend), //post body\n          headers: {\n            //Header Defination\n            'Content-Type': \n              'application/json',\n          },\n        })\n          .then((response) => response.json())\n          //If response is in json then in success\n          .then((responseJson) => {\n              if (!responseJson.error)\n              {\n                user = responseJson;\n                    navigation.navigate('TabNavigator', {\n                        screen: 'Home',\n                        params: user\n                    });\n              }\n              //alert(JSON.stringify(responseJson));\n              //console.log(responseJson);\n              //console.log(user[0].Pantry.Ingredient_List[0]); // this line works sometimes\n              //console.log(user.Pantry[0].Ingredient_List[0]);\n              // navigation.navigate('TabNavigator');\n          })\n          //If response is not in json then in error\n          .catch((error) => {\n            //alert(JSON.stringify(error));\n            console.error(error);\n           // navigation.navigate('LoginScreen');\n          });\n    };\n\n    return (\n        <View style={styles.container}>\n\n            <SafeAreaView styles={{\n                top: 60,\n                alignItems: 'center',\n                }}>\n                    <Image \n                        style = {{\n                            marginTop: 50,\n                            alignSelf:'center',\n                            width: 150,\n                            height: 110,\n                            resizeMode: 'contain'\n                        }}\n                        source = {require('../images/MeChefLogo.png')}\n                    />\n                    <View style={{\n                        top: 50,\n                    }}>\n                    <Text style = {{\n                        // height: 100, \n                        // top: 30, \n                        fontSize: 25, \n                        textAlign: 'center',\n                        fontWeight: 'bold'\n                    }}>\n                        Please log into your MeChef account\n                    </Text>\n                    <Text\n                        style = {{ \n                            // position: 'relative',\n                            // top: 30,  \n                            textAlign: 'center',\n                            paddingLeft: 50,\n                            paddingRight: 50,\n                            fontSize: 18,\n                        }}>\n                    </Text>\n                </View>\n                \n                <SafeAreaView>\n                <KeyboardAvoidingView behavior=\"position\" style = {{alignItems: 'center'}}>\n                    <TextInput\n                        style = {{\n                            borderColor: \"gray\",\n                            width: 320,\n                            borderWidth: 0.5,\n                            borderRadius: 8,\n                            padding: 10,\n                            // top: 400,\n                            justifyContent: 'center',\n                            alignSelf: 'center',\n                            marginBottom: 10,\n                            // position: 'absolute'\n                        }}\n                        placeholder = \"Username\"\n                        onChangeText = {username => setUsername(username)}\n                        //value = {text}\n                        >\n                    </TextInput>\n                    \n                    <TextInput\n                        style = {{\n                            borderColor: \"gray\",\n                            width: 320,\n                            borderWidth: 0.5,\n                            borderRadius: 8,\n                            padding: 10,\n                            // top: 25,\n                            justifyContent: 'center',\n                            alignSelf: 'center',\n                            marginBottom: 10,\n                            // position: 'absolute',\n                            // width:    '100%',\n                            // bottom:   this.state.keyboardOffset,\n                        }}\n                        placeholder = \"Password\"\n                        onChangeText={password => setPassword(password)}\n                        secureTextEntry={true}\n                        //value = {text}\n                        >\n                    </TextInput>\n                    {/* <MsgBox type={messageType}>{message}</MsgBox> */}\n                    <TouchableOpacity // Login\n                        onPress = {doLogin}\n                        // underlayColor = \"#FFB9B9\"\n                        style = {\n                            {\n                                width: 320,\n                                height: 46,\n                                backgroundColor: '#FFB9B9',\n                                borderRadius: 100,\n                                // top: 450,\n                                justifyContent: 'center',\n                                alignSelf: 'center',\n                                // shadowOffset:{  width: 1,  height: 2,  },\n                                // shadowColor: 'black',\n                                // shadowOpacity: 1.0,\n                            }\n                        }\n                        >\n                        <Text style = {{\n                            textAlign: 'center',\n                            justifyContent: 'center',\n                            alignSelf: 'center',\n                            color: 'white'\n                        }}>\n                            Login\n                        </Text>\n                    </TouchableOpacity>\n                    {/* Reset Password */}\n                    <TouchableOpacity\n                        onPress = {() => navigation.navigate('EmailVerification')}\n                        style = {\n                            {\n                                color: '#FFB9B9',\n                                //borderRadius: 100,\n                                // top: 450,\n                                justifyContent: 'center',\n                                alignSelf: 'center',\n                                // shadowOffset:{  width: 1,  height: 2,  },\n                                // shadowColor: 'black',\n                                // shadowOpacity: 1.0,\n                            }\n                        }\n                    >\n                        <Text style = {{\n                            textAlign: 'center',\n                            justifyContent: 'center',\n                            alignSelf: 'center',\n                            color: 'blue'\n                        }}>\n                            Forgot your password?\n                        </Text>\n                    </TouchableOpacity>\n                    \n                </KeyboardAvoidingView>\n            </SafeAreaView>\n        </SafeAreaView>\n            \n        </View>\n    );\n}\n\nexport default LoginScreen;\n\n// import { NavigationContainer } from '@react-navigation/native';\n// import Navigation from '../App';\n// import React from 'react';\n// import {View, Text, Button, StyleSheet, ImageBackground, ImageBackgroundBase} from 'react-native';\n// import colors from '../assets/colors/colors'\n// import { FlatList, ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\n// import { SafeAreaView } from 'react-native-safe-area-context';\n// import recipesData from '../data/recipeData';\n// import styles from '../assets/styles';\n\n// import Feather from 'react-native-vector-icons/Feather';\n// import MaterialIcons from 'react-native-vector-icons/MaterialIcons'\n// const LoginScreen = ({navigation}) => {\n\n//     return(\n        \n//         <View>\n//             <ScrollView> \n//                 <SafeAreaView > \n//                     <Text style={styles.titleText} onPress={() => navigation.navigate('TabNavigator')}> Login Screen </Text>      \n//                 </SafeAreaView>\n//             </ScrollView>\n//         </View>\n\n//     );\n\n// };\n\n// export default LoginScreen;"]},"metadata":{},"sourceType":"module"}