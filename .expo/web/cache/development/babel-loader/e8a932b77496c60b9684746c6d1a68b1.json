{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport Navigation from \"../App\";\nimport React, { useState } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { ImageBackgroundBase } from \"react-native-web/dist/index\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport colors from \"../assets/colors/colors\";\nimport { FlatList, ScrollView, TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport recipesData from \"../data/recipeData\";\nimport styles from \"../assets/styles\";\nimport BlurOverlay from 'react-native-blur-overlay';\nimport pantryData from \"../data/pantryData\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\nimport { SearchBar } from 'react-native-elements';\nimport LoginScreen from \"./LoginScreen\";\nvar searchForIngURL = \"http://mechef.zapto.org/api/searchForIngredient\";\nvar addToPantryURL = \"http://mechef.zapto.org/api/addPantry\";\n\nvar Pantry = function Pantry(_ref) {\n  var navigation = _ref.navigation,\n      props = _ref.props,\n      route = _ref.route;\n  var user = route.params;\n  var search = '';\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      searchQuery = _React$useState2[0],\n      setSearchQuery = _React$useState2[1];\n\n  var onChangeSearch = function onChangeSearch(query) {\n    return setSearchQuery(query);\n  };\n\n  var doSearch = function doSearch() {\n    var dataToSend = {\n      search: ingredientToAdd,\n      quantity: '1'\n    };\n    fetch(searchForIngURL, {\n      method: 'POST',\n      body: JSON.stringify(dataToSend),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      console.log(responseJson);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var renderPantry = function renderPantry(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableOpacity, {\n      style: {\n        backgroundColor: colors.pink,\n        width: 180,\n        height: 40,\n        borderRadius: 15,\n        marginLeft: 5,\n        marginRight: 5,\n        marginVertical: 10,\n        justifyContent: 'center'\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: 'center',\n        color: colors.white\n      }\n    }, item.Name));\n  };\n\n  return React.createElement(View, {\n    style: {\n      backgroundColor: colors.white,\n      height: '100%'\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: 60,\n      backgroundColor: \"white\"\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 32,\n      fontWeight: \"bold\",\n      alignSelf: 'center',\n      bottom: 0\n    }\n  }, \"Your Pantry\")), React.createElement(ScrollView, {\n    style: {}\n  }, React.createElement(View, {\n    style: {\n      alignContent: 'center',\n      flexDirection: 'row'\n    }\n  }, React.createElement(SearchBar, {\n    inputContainerStyle: {\n      backgroundColor: '#E3E3E3'\n    },\n    containerStyle: {\n      backgroundColor: 'white',\n      width: '75%',\n      borderTopColor: 'white',\n      borderBottomColor: 'white'\n    },\n    lightTheme: true,\n    round: true,\n    searchIcon: {\n      size: 24\n    },\n    onChangeText: onChangeSearch,\n    onClear: onChangeSearch,\n    placeholder: \"Search for item...\",\n    value: searchQuery\n  }), React.createElement(TouchableOpacity, {\n    onPress: searchForIngURL,\n    style: {\n      width: 90,\n      height: 46,\n      backgroundColor: '#FFB9B9',\n      borderRadius: 15,\n      justifyContent: 'center',\n      alignContent: 'center',\n      marginTop: 10\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      justifyContent: 'center',\n      alignSelf: 'center',\n      color: 'white'\n    }\n  }, \"Add Item\"))), React.createElement(View, {\n    style: {\n      justifyContent: 'center',\n      alignSelf: 'center'\n    }\n  }, React.createElement(FlatList, {\n    data: user[0].Ingredient_List,\n    renderItem: renderPantry,\n    numColumns: 2,\n    key: 2,\n    style: {\n      alignContent: 'center'\n    }\n  }))));\n};\n\nexport default Pantry;","map":{"version":3,"sources":["/Users/kenleyrodriguez/OneDrive - Knights - University of Central Florida/Fall21/POOP/MeChefMobile/screens/Pantry.js"],"names":["NavigationContainer","Navigation","React","useState","ImageBackgroundBase","colors","FlatList","ScrollView","TouchableHighlight","TouchableOpacity","SafeAreaView","recipesData","styles","BlurOverlay","pantryData","Feather","MaterialIcons","Colors","SearchBar","LoginScreen","searchForIngURL","addToPantryURL","Pantry","navigation","props","route","user","params","search","searchQuery","setSearchQuery","onChangeSearch","query","doSearch","dataToSend","ingredientToAdd","quantity","fetch","method","body","JSON","stringify","headers","then","response","json","responseJson","console","log","catch","error","renderPantry","item","backgroundColor","pink","width","height","borderRadius","marginLeft","marginRight","marginVertical","justifyContent","textAlign","color","white","Name","marginTop","fontSize","fontWeight","alignSelf","bottom","alignContent","flexDirection","borderTopColor","borderBottomColor","size","Ingredient_List"],"mappings":"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","sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\nimport Navigation from '../App';\nimport React, {useState} from 'react';\nimport {Keyboard, View, Text, Button, StyleSheet, Image, ImageBackground, ImageBackgroundBase, Alert, TextInput, KeyboardAvoidingView, Dimensions} from 'react-native';\nimport colors from '../assets/colors/colors'\nimport { FlatList, ScrollView, TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport recipesData from '../data/recipeData';\nimport styles from '../assets/styles';\nimport BlurOverlay from 'react-native-blur-overlay';\nimport pantryData from '../data/pantryData';\nimport Feather from 'react-native-vector-icons/Feather';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons'\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\nimport {SearchBar} from 'react-native-elements';\nimport LoginScreen from './LoginScreen';\n\nconst searchForIngURL = \"http://mechef.zapto.org/api/searchForIngredient\";\nconst addToPantryURL = \"http://mechef.zapto.org/api/addPantry\";\nconst Pantry = ({navigation, props, route}) => {\n    // const [ingredientToAdd, setIngredientToAdd] = useState('');\n    const user = route.params;\n    var search = '';\n\n    const [searchQuery, setSearchQuery] = React.useState('');\n\n    const onChangeSearch = query => setSearchQuery(query);\n\n\n    const doSearch = () => {\n        //POST json\n        var dataToSend = {search: ingredientToAdd, quantity: '1'};\n        //POST request\n        fetch(searchForIngURL, {\n          method: 'POST', //Request Type\n          body: JSON.stringify(dataToSend), //post body\n          headers: {\n            //Header Defination\n            'Content-Type': \n              'application/json',\n          },\n        })\n          .then((response) => response.json())\n          //If response is in json then in success\n          .then((responseJson) => {\n            //   if (!responseJson.error)\n            //   {\n            //     user = responseJson;\n            //         navigation.navigate('TabNavigator', {\n            //             screen: 'Home',\n            //             params: user\n            //         });\n            //   }\n              //alert(JSON.stringify(responseJson));\n              console.log(responseJson);\n              //console.log(user[0].Pantry.Ingredient_List[0]); // this line works sometimes\n              //console.log(user.Pantry[0].Ingredient_List[0]);\n              // navigation.navigate('TabNavigator');\n          })\n          //If response is not in json then in error\n          .catch((error) => {\n            //alert(JSON.stringify(error));\n            console.error(error);\n           // navigation.navigate('LoginScreen');\n          });\n    };\n    const renderPantry = ({item}) => {\n\n        return(\n            // <Text>{item.title}</Text>\n            <TouchableOpacity style={{\n                backgroundColor: colors.pink,\n                width: 180,\n                height: 40,\n                borderRadius: 15,\n                marginLeft: 5,\n                marginRight: 5,\n                marginVertical: 10,\n                justifyContent: 'center'\n            }}>\n                <Text style={{\n                    textAlign: 'center',\n                    color: colors.white\n                }}>{item.Name}</Text>\n            </TouchableOpacity>\n        )\n\n    };\n\n    return(\n\n        // <SafeAreaView>\n        //     <View> </View>\n        // </SafeAreaView>\n        \n        <View\n        style={{\n            backgroundColor: colors.white,\n            height: '100%'\n        }}>\n            \n                <View\n                    style = {{\n                        marginTop:60,\n                        backgroundColor: \"white\",\n                    }}\n                >\n                    <Text style={{\n                            fontSize: 32,\n                            fontWeight: \"bold\",\n                            //left: 90,\n                            alignSelf: 'center',\n                            bottom: 0\n                            }}\n                    >Your Pantry</Text>\n                </View>\n\n                <ScrollView style={{\n            //   marginTop: 30,  \n            }}>\n\n                <View style = {{\n                    alignContent: 'center',\n                    flexDirection: 'row'\n                }}\n                >  \n                    <SearchBar \n                    inputContainerStyle={{\n                        backgroundColor: '#E3E3E3',\n                    }}\n                    containerStyle={{\n                        backgroundColor: 'white',\n                        width: '75%',\n                        borderTopColor: 'white',\n                        borderBottomColor: 'white'\n                    }}\n                    lightTheme={true}\n                    round\n                    searchIcon={{ size: 24 }}\n                    onChangeText={onChangeSearch}\n                    onClear={onChangeSearch}\n                    placeholder=\"Search for item...\"\n                    value={searchQuery}\n                    // value={search}\n                    ></SearchBar>\n\n                    <TouchableOpacity\n                        onPress = {searchForIngURL}\n                        // underlayColor = \"#FFB9B9\"\n                        style = {\n                            {\n                                width: 90,\n                                height: 46,\n                                backgroundColor: '#FFB9B9',\n                                borderRadius: 15,\n                                justifyContent: 'center',\n                                alignContent:'center',\n                                marginTop: 10,\n                                // alignSelf: 'center',\n                                // marginLeft: 110,\n                            }\n                        }\n                        >\n                        <Text style = {{\n                            textAlign: 'center',\n                            justifyContent: 'center',\n                            alignSelf: 'center',\n                            color: 'white'\n                        }}>\n                            Add Item\n                        </Text>\n                    \n                    </TouchableOpacity>\n\n                    \n                </View>\n                \n                <View style={{\n                    justifyContent: 'center',\n                    alignSelf: 'center'\n                }}\n                >\n\n                    <FlatList \n                        data={user[0].Ingredient_List}\n                        renderItem={renderPantry}\n                        //horizontal={false}\n                        numColumns={2}\n                        key={2}\n                        //showsHorizontalScrollIndicator={false}\n                        style={{\n                            alignContent: 'center'\n                            //marginLeft: 10,\n                            //top: 15,\n                            \n                    }}> \n                    </FlatList>\n\n                </View>\n            </ScrollView>\n\n            {/* <TouchableOpacity style = {{backgroundColor:colors.white, width: Dimensions.get('window').width}}>\n                <Text style={{\n                            fontSize: 32,\n                            fontWeight: \"bold\",\n                            //textDecorationLine: 'underline',\n                            //left: 90,\n                            alignSelf: 'center',\n                            bottom: 20\n                            }}\n                >\n                    Add or Remove Items\n                </Text>\n                <TextInput\n                        style = {{\n                            backgroundColor: 'white',\n                            borderColor: \"gray\",\n                            width: 320,\n                            borderWidth: 0.5,\n                            borderRadius: 8,\n                            padding: 10,\n                            // top: 400,\n                            justifyContent: 'center',\n                            alignSelf: 'center',\n                            marginBottom: 10,\n                            // position: 'absolute'\n                        }}\n                        placeholder = \"Search Item\"\n                        //value = {text}\n                    >\n                </TextInput>\n                <TouchableOpacity\n                        onPress = {() => navigation.navigate('Pantry')}\n                        // underlayColor = \"#FFB9B9\"\n                        style = {\n                            {\n                                width: 320,\n                                height: 46,\n                                backgroundColor: '#FFB9B9',\n                                borderRadius: 100,\n                                justifyContent: 'center',\n                                alignSelf: 'center',\n                            }\n                        }\n                        >\n                        <Text style = {{\n                            textAlign: 'center',\n                            justifyContent: 'center',\n                            alignSelf: 'center',\n                            color: 'white'\n                        }}>\n                            Add Item\n                        </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                        onPress = {() => navigation.navigate('Pantry')}\n                        // underlayColor = \"#FFB9B9\"\n                        style = {\n                            {\n                                marginTop:10,\n                                width: 320,\n                                height: 46,\n                                backgroundColor: '#FFB9B9',\n                                borderRadius: 100,\n                                justifyContent: 'center',\n                                alignSelf: 'center',\n                            }\n                        }\n                        >\n                        <Text style = {{\n                            textAlign: 'center',\n                            justifyContent: 'center',\n                            alignSelf: 'center',\n                            color: 'white'\n                        }}>\n                            Remove Item\n                        </Text>\n                </TouchableOpacity>\n            </TouchableOpacity>\n             */}\n        </View>\n\n    );\n\n};\n\nexport default Pantry;"]},"metadata":{},"sourceType":"module"}