{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport Home from \"./screens/Home\";\nimport Explore from \"./screens/Explore\";\nimport Profile from \"./screens/Profile\";\nimport Pantry from \"./screens/Pantry\";\nimport Recipe from \"./screens/Recipe\";\nimport Recipes from \"./screens/Recipes\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport PersonalInformation from \"./screens/PersonalInformation\";\nimport EmailVerification from \"./screens/EmailVerification\";\nimport ResetPassword from \"./screens/ResetPassword\";\nimport AddRecipe from \"./screens/AddRecipe\";\nimport colors from \"./assets/colors/colors\";\nimport Entypo from \"@expo/vector-icons/Entypo\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport { NavigationContainer, validatePathConfig } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport WelcomeScreen from \"./screens/WelcomeScreen\";\nimport { TransitionSpecs } from '@react-navigation/stack';\nimport { disable } from 'debug';\nEntypo.loadFont();\nMaterialCommunityIcons.loadFont();\nLogBox.ignoreAllLogs();\nconsole.reportErrorsAsExceptions = false;\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar Auth = function Auth() {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"WelcomeScreen\"\n  }, React.createElement(Stack.Screen, {\n    name: \"WelcomeScreen\",\n    component: WelcomeScreen,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"LoginScreen\",\n    component: LoginScreen,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"RegisterScreen\",\n    component: RegisterScreen,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"EmailVerification\",\n    component: EmailVerification,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"AddRecipe\",\n    component: AddRecipe,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"TabNavigator\",\n    component: TabNavigator,\n    options: {\n      headerShown: false\n    }\n  }));\n};\n\nvar TabNavigator = function TabNavigator(_ref) {\n  var route = _ref.route;\n  var user = route.params;\n  return React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      activeTintColor: colors.pink,\n      inactiveTintColor: colors.gray,\n      showLabel: false\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: Home,\n    options: {\n      headerShown: false,\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color;\n        return React.createElement(Entypo, {\n          name: \"home\",\n          size: 32,\n          color: color\n        });\n      }\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Explore\",\n    component: Explore,\n    options: {\n      headerShown: false,\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color;\n        return React.createElement(Feather, {\n          name: \"search\",\n          size: 32,\n          color: color\n        });\n      }\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Profile\",\n    component: Profile,\n    options: {\n      headerShown: false,\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var color = _ref4.color;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"account\",\n          size: 32,\n          color: color\n        });\n      }\n    }\n  }));\n};\n\nvar config = {\n  animation: 'time',\n  config: {\n    stiffness: 1000,\n    damping: 50,\n    mass: 3,\n    overshootClamping: false,\n    restDisplacementThreshold: 0.01,\n    restSpeedThreshold: 0.01\n  }\n};\nvar closeConfig = {\n  animation: 'spring',\n  config: {\n    stiffness: 1000,\n    damping: 500,\n    mass: 3,\n    overshootClamping: true,\n    restDisplacementThreshold: 1.,\n    restSpeedThreshold: 1.\n  }\n};\n\nvar App = function App() {\n  return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, {\n    initialRouteName: \"WelcomeScreen\",\n    screenOptions: {\n      headerShown: false\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"WelcomeScreen\",\n    component: Auth,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"TabNavigator\",\n    component: TabNavigator,\n    options: {\n      headerShown: false,\n      gestureEnabled: true,\n      gestureDirection: \"horizontal\",\n      transitionSpec: {\n        open: TransitionSpecs.RevealFromBottomAndroid,\n        close: TransitionSpecs.RevealFromBottomAndroid\n      }\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: Home,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Explore\",\n    component: Explore\n  }), React.createElement(Stack.Screen, {\n    name: \"Profile\",\n    component: Profile\n  }), React.createElement(Stack.Screen, {\n    name: \"Pantry\",\n    component: Pantry\n  }), React.createElement(Stack.Screen, {\n    name: \"Recipe\",\n    component: Recipe,\n    options: {\n      headerShown: false,\n      gestureEnabled: true,\n      cardStyle: true,\n      presentation: 'modal',\n      gestureDirection: \"vertical\",\n      transitionSpec: {\n        open: config,\n        close: closeConfig\n      }\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Recipes\",\n    component: Recipes\n  }), React.createElement(Stack.Screen, {\n    name: \"PersonalInformation\",\n    component: PersonalInformation\n  }), React.createElement(Stack.Screen, {\n    name: \"ResetPassword\",\n    component: ResetPassword\n  })));\n};\n\nvar styles = StyleSheet.create({\n  tabBar: {\n    backgroundColor: colors.white,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20\n  }\n});\nexport default App;","map":{"version":3,"sources":["/Users/kenleyrodriguez/OneDrive - Knights - University of Central Florida/Fall21/POOP/MeChefMobile/App.js"],"names":["React","Home","Explore","Profile","Pantry","Recipe","Recipes","LoginScreen","RegisterScreen","PersonalInformation","EmailVerification","ResetPassword","AddRecipe","colors","Entypo","MaterialCommunityIcons","Feather","NavigationContainer","validatePathConfig","createStackNavigator","createBottomTabNavigator","WelcomeScreen","TransitionSpecs","disable","loadFont","LogBox","ignoreAllLogs","console","reportErrorsAsExceptions","Stack","Tab","Auth","headerShown","TabNavigator","route","user","params","activeTintColor","pink","inactiveTintColor","gray","showLabel","tabBarIcon","color","config","animation","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","closeConfig","App","gestureEnabled","gestureDirection","transitionSpec","open","RevealFromBottomAndroid","close","cardStyle","presentation","styles","StyleSheet","create","tabBar","backgroundColor","white","borderTopLeftRadius","borderTopRightRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {View, Text, StyleSheet, LogBox} from 'react-native';\n\nimport Home from './screens/Home';\nimport Explore from './screens/Explore';\nimport Profile from './screens/Profile';\nimport Pantry from './screens/Pantry';\nimport Recipe from './screens/Recipe';\nimport Recipes from './screens/Recipes';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport PersonalInformation from './screens/PersonalInformation';\nimport EmailVerification from './screens/EmailVerification';\nimport ResetPassword from './screens/ResetPassword';\nimport AddRecipe from './screens/AddRecipe';\n\nimport colors from './assets/colors/colors';\nimport Entypo from 'react-native-vector-icons/Entypo';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Feather from 'react-native-vector-icons/Feather';\n\nimport {NavigationContainer, validatePathConfig} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\nimport WelcomeScreen from './screens/WelcomeScreen';\nimport { TransitionSpecs } from '@react-navigation/stack';\nimport { disable } from 'debug';\n\nEntypo.loadFont();\nMaterialCommunityIcons.loadFont();\nLogBox.ignoreAllLogs();\nconsole.reportErrorsAsExceptions = false;\n\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nconst Auth = () => {\n  \n  // Stack Navigator for Login and Sign up Screen\n  return (\n    <Stack.Navigator initialRouteName=\"WelcomeScreen\">\n      <Stack.Screen\n        name=\"WelcomeScreen\"\n        component={WelcomeScreen}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"LoginScreen\"\n        component={LoginScreen}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"RegisterScreen\"\n        component={RegisterScreen}\n        options={{\n          headerShown: false, //Set Header Title\n        }}\n      />\n      <Stack.Screen\n        name=\"EmailVerification\"\n        component={EmailVerification}\n        options={{\n          headerShown: false, //Set Header Title\n        }}\n      />\n      <Stack.Screen\n        name=\"AddRecipe\"\n        component={AddRecipe}\n        options={{\n          headerShown: false, //Set Header Title\n        }}\n      />\n      <Stack.Screen\n        name=\"TabNavigator\"\n        component={TabNavigator}\n        options={{\n          headerShown: false, //Set Header Title\n        }}\n        />\n    </Stack.Navigator>\n  );\n};\n\nconst TabNavigator = ({route}) => {\n  const user = route.params;\n  return (\n    <Tab.Navigator\n      tabBarOptions={{\n        activeTintColor: colors.pink,\n        inactiveTintColor: colors.gray,\n        showLabel: false,\n      }}>\n      <Tab.Screen\n        name=\"Home\"\n        component={Home}\n        options={{\n          headerShown: false,\n          tabBarIcon: ({color}) => (\n            <Entypo name=\"home\" size={32} color={color} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Explore\"\n        component={Explore}\n        options={{\n          headerShown: false,\n          tabBarIcon: ({color}) => (\n            <Feather name=\"search\" size={32} color={color} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{\n          headerShown: false,\n          tabBarIcon: ({color}) => (\n            <MaterialCommunityIcons name=\"account\" size={32} color={color} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nconst config = {\n  animation: 'time',\n  config: {\n    stiffness: 1000,\n    damping: 50,\n    mass: 3,\n    overshootClamping: false,\n    restDisplacementThreshold: 0.01,\n    restSpeedThreshold: 0.01,\n  },\n};\n\nconst closeConfig = {\n  animation: 'spring',\n  config: {\n    stiffness: 1000,\n    damping: 500,\n    mass: 3,\n    overshootClamping: true,\n    restDisplacementThreshold: 1.,\n    restSpeedThreshold: 1.,\n  },\n};\n\nconst App = () => {\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        initialRouteName=\"WelcomeScreen\"\n        screenOptions={{\n          headerShown: false,\n        }}>\n        <Stack.Screen\n          name=\"WelcomeScreen\"\n          component={Auth}\n          options={{headerShown: false}}\n          />\n        {/* <Stack.Screen\n          name=\"LoginScreen\"\n          component={Auth}\n          options={{headerShown: false}}\n          /> */}\n        <Stack.Screen\n            name=\"TabNavigator\"\n            component={TabNavigator}\n            options={{\n              headerShown: false,\n              gestureEnabled: true,\n              gestureDirection: \"horizontal\",\n              transitionSpec:{\n                open: TransitionSpecs.RevealFromBottomAndroid,\n                close: TransitionSpecs.RevealFromBottomAndroid\n              }\n            }}\n            // screenOptions={{\n            //   gestureEnabled: true,\n            //   gestureDirection: \"vertical\",\n            //   transitionSpec:{\n            //     open: config,\n            //     close: config\n            //   }\n            // }}\n        />\n        <Stack.Screen\n          name=\"Home\"\n          component={Home}\n          options={{headerShown: false}}\n        />\n        <Stack.Screen\n          name=\"Explore\"\n          component={Explore}\n        />\n        <Stack.Screen\n          name=\"Profile\"\n          component={Profile}\n        />\n        <Stack.Screen\n          name=\"Pantry\"\n          component={Pantry}\n        />\n        <Stack.Screen\n          name=\"Recipe\"\n          component={Recipe}\n          options={{\n            headerShown: false,\n            gestureEnabled: true,\n            // gestureDirection: \"horizontal\",\n            cardStyle: true,\n            presentation: 'modal',\n            gestureDirection: \"vertical\",\n            transitionSpec:{\n              // open: TransitionSpecs.RevealFromBottomAndroidSpec,\n              // close: TransitionSpecs.RevealFromBottomAndroidSpec\n              open: config,\n              close: closeConfig\n            }\n          }}\n\n        />\n        <Stack.Screen\n          name=\"Recipes\"\n          component={Recipes}\n        />\n        <Stack.Screen\n          name=\"PersonalInformation\"\n          component={PersonalInformation}\n        />\n        <Stack.Screen\n          name=\"ResetPassword\"\n          component={ResetPassword}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\n// const LoginNav = createStackNavigator();\n\n// const Login = () => {\n\n//   <LoginNav.Navigator>\n//     <LoginNav.Screen\n//       name=\"Login\"\n//       component={Login}\n//       options={{\n//         headerShown: false,\n//       }}\n//     >\n//     </LoginNav.Screen>\n//   </LoginNav.Navigator>\n\n// };\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    backgroundColor: colors.white,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n  },\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}