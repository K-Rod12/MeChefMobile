{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport Navigation from \"../App\";\nimport React, { useState } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { ImageBackgroundBase } from \"react-native-web/dist/index\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport colors from \"../assets/colors/colors\";\nimport { FlatList, ScrollView, TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport recipesData from \"../data/recipeData\";\nimport styles from \"../assets/styles\";\nimport BlurOverlay from 'react-native-blur-overlay';\nimport pantryData from \"../data/pantryData\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\nimport { SearchBar } from 'react-native-elements';\nimport LoginScreen from \"./LoginScreen\";\nimport { NavigationEvents } from 'react-navigation';\nvar searchForIngURL = \"http://mechef.zapto.org/api/searchForIngredient\";\nvar addToPantryURL = \"http://mechef.zapto.org/api/addToPantry\";\n\nvar Pantry = function Pantry(_ref) {\n  var navigation = _ref.navigation,\n      props = _ref.props,\n      route = _ref.route;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      ingredientToAdd = _useState6[0],\n      setIngredientToAdd = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      updatedUser = _useState8[0],\n      setUpdatedUser = _useState8[1];\n\n  var user = route.params;\n  var searchResult = [];\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      searchQuery = _React$useState2[0],\n      setSearchQuery = _React$useState2[1];\n\n  var onChangeSearch = function onChangeSearch(query) {\n    return setSearchQuery(query);\n  };\n\n  var addItem = function addItem() {\n    var dataToSend = {\n      userId: user[0].Login,\n      ingName: ingredientToAdd\n    };\n    fetch(addToPantryURL, {\n      method: 'POST',\n      body: JSON.stringify(dataToSend),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      if (!responseJson.error) {\n        user[0] = responseJson;\n        console.log(responseJson.Ingredient_List[1].Name);\n        alert(JSON.stringify(responseJson));\n        renderPantry();\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var doSearch = function doSearch() {\n    var dataToSend = {\n      userId: user[0].Login,\n      search: searchQuery\n    };\n    fetch(searchForIngURL, {\n      method: 'POST',\n      body: JSON.stringify(dataToSend),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      if (!responseJson.error) {\n        searchResult = responseJson;\n      }\n\n      console.log(responseJson);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  var renderPantry = function renderPantry(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableOpacity, {\n      style: {\n        backgroundColor: colors.pink,\n        width: 180,\n        height: 40,\n        borderRadius: 15,\n        marginLeft: 5,\n        marginRight: 5,\n        marginVertical: 10,\n        justifyContent: 'center'\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: 'center',\n        color: colors.white\n      }\n    }, item.Name));\n  };\n\n  return React.createElement(View, {\n    style: {\n      backgroundColor: colors.white,\n      height: '100%'\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: 60,\n      backgroundColor: \"white\"\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      width: 20,\n      marginLeft: 20,\n      marginTop: 5\n    },\n    onPress: function onPress() {\n      return navigation.navigate('TabNavigator', {\n        screen: 'Home',\n        params: user\n      });\n    }\n  }, React.createElement(MaterialIcons, {\n    style: {\n      fontSize: 30\n    },\n    name: \"arrow-back-ios\"\n  })), React.createElement(Text, {\n    style: {\n      fontSize: 32,\n      fontWeight: \"bold\",\n      alignSelf: 'center',\n      bottom: 0\n    }\n  }, \"Your Pantry\")), React.createElement(View, {\n    style: {\n      alignContent: 'center',\n      flexDirection: 'row'\n    }\n  }, React.createElement(SearchBar, {\n    inputContainerStyle: {\n      backgroundColor: '#E3E3E3'\n    },\n    containerStyle: {\n      backgroundColor: 'white',\n      width: '75%',\n      borderTopColor: 'white',\n      borderBottomColor: 'white'\n    },\n    lightTheme: true,\n    round: true,\n    searchIcon: {\n      size: 24\n    },\n    placeholder: \"Search for item...\",\n    value: searchQuery,\n    onChangeText: onChangeSearch,\n    onClear: onChangeSearch\n  }), React.createElement(View, {\n    style: styles.centeredView\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      setModalVisible(!modalVisible);\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView\n  }, React.createElement(View, {\n    style: styles.modalView\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      marginLeft: 260,\n      height: 46,\n      justifyContent: 'center',\n      alignContent: 'center'\n    },\n    onPress: function onPress() {\n      return setModalVisible(!modalVisible);\n    }\n  }, React.createElement(MaterialIcons, {\n    style: {\n      fontSize: 30\n    },\n    name: \"cancel\"\n  })), React.createElement(Text, {\n    style: {\n      fontSize: 24,\n      fontWeight: 'bold',\n      paddingBottom: 10\n    }\n  }, \"Add an Ingredient\"), React.createElement(TextInput, {\n    style: {\n      borderColor: \"gray\",\n      width: 320,\n      borderWidth: 0.5,\n      borderRadius: 8,\n      padding: 10,\n      justifyContent: 'center',\n      alignSelf: 'center',\n      marginBottom: 10\n    },\n    placeholder: \"Add Ingredient\",\n    placeholderTextColor: \"grey\",\n    onChangeText: function onChangeText(ingredientToAdd) {\n      return setIngredientToAdd(ingredientToAdd);\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: addItem,\n    style: {\n      width: 90,\n      height: 46,\n      backgroundColor: '#FFB9B9',\n      borderRadius: 15,\n      justifyContent: 'center',\n      alignContent: 'center',\n      marginTop: 10\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      justifyContent: 'center',\n      alignSelf: 'center',\n      color: 'white'\n    }\n  }, \"Add Item\")), React.createElement(Text, {\n    style: {\n      fontWeight: 'bold',\n      fontSize: 24,\n      paddingTop: 20,\n      paddingBottom: 10\n    }\n  }, \"Search for Recipes\"), React.createElement(TextInput, {\n    style: {\n      borderColor: \"gray\",\n      width: 320,\n      borderWidth: 0.5,\n      borderRadius: 8,\n      padding: 10,\n      justifyContent: 'center',\n      alignSelf: 'center',\n      marginBottom: 10\n    },\n    placeholder: \"How many recipes?\",\n    placeholderTextColor: \"grey\"\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      width: 90,\n      height: 46,\n      backgroundColor: '#FFB9B9',\n      borderRadius: 15,\n      justifyContent: 'center',\n      alignContent: 'center',\n      marginTop: 10\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      justifyContent: 'center',\n      alignSelf: 'center',\n      color: 'white'\n    }\n  }, \"Search\"))))), React.createElement(TouchableOpacity, {\n    style: {\n      width: 90,\n      height: 46,\n      backgroundColor: '#FFB9B9',\n      borderRadius: 15,\n      justifyContent: 'center',\n      alignContent: 'center',\n      marginRight: 10\n    },\n    onPress: function onPress() {\n      return setModalVisible(true);\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      justifyContent: 'center',\n      alignSelf: 'center',\n      color: 'white'\n    }\n  }, \"Add Item\")))), React.createElement(View, {\n    style: {\n      justifyContent: 'center',\n      alignSelf: 'center'\n    }\n  }, React.createElement(FlatList, {\n    data: user[0].Ingredient_List,\n    renderItem: renderPantry,\n    numColumns: 2,\n    key: 2,\n    style: {\n      alignContent: 'center'\n    }\n  })));\n};\n\nexport default Pantry;","map":{"version":3,"sources":["/Users/kenleyrodriguez/OneDrive - Knights - University of Central Florida/Fall21/POOP/MeChefMobile/screens/Pantry.js"],"names":["NavigationContainer","Navigation","React","useState","ImageBackgroundBase","colors","FlatList","ScrollView","TouchableHighlight","TouchableOpacity","SafeAreaView","recipesData","styles","BlurOverlay","pantryData","Feather","MaterialIcons","Colors","SearchBar","LoginScreen","NavigationEvents","searchForIngURL","addToPantryURL","Pantry","navigation","props","route","text","setText","modalVisible","setModalVisible","ingredientToAdd","setIngredientToAdd","updatedUser","setUpdatedUser","user","params","searchResult","searchQuery","setSearchQuery","onChangeSearch","query","addItem","dataToSend","userId","Login","ingName","fetch","method","body","JSON","stringify","headers","then","response","json","responseJson","error","console","log","Ingredient_List","Name","alert","renderPantry","catch","doSearch","search","item","backgroundColor","pink","width","height","borderRadius","marginLeft","marginRight","marginVertical","justifyContent","textAlign","color","white","marginTop","navigate","screen","fontSize","fontWeight","alignSelf","bottom","alignContent","flexDirection","borderTopColor","borderBottomColor","size","centeredView","modalView","paddingBottom","borderColor","borderWidth","padding","marginBottom","paddingTop"],"mappings":"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","sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\nimport Navigation from '../App';\nimport React, {useState} from 'react';\nimport {Keyboard, View, Text, Button, StyleSheet, Image, ImageBackground, ImageBackgroundBase, Alert, TextInput, KeyboardAvoidingView, Dimensions, Modal, Pressable} from 'react-native';\nimport colors from '../assets/colors/colors'\nimport { FlatList, ScrollView, TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport recipesData from '../data/recipeData';\nimport styles from '../assets/styles';\nimport BlurOverlay from 'react-native-blur-overlay';\nimport pantryData from '../data/pantryData';\nimport Feather from 'react-native-vector-icons/Feather';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons'\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\nimport {SearchBar} from 'react-native-elements';\nimport LoginScreen from './LoginScreen';\nimport { NavigationEvents } from 'react-navigation';\n\n\nconst searchForIngURL = \"http://mechef.zapto.org/api/searchForIngredient\";\nconst addToPantryURL = \"http://mechef.zapto.org/api/addToPantry\";\n\nconst Pantry = ({navigation, props, route}) => {\n    const [text, setText] = useState(\"\");\n    const [modalVisible, setModalVisible] = useState(false);\n    const [ingredientToAdd, setIngredientToAdd] = useState('');\n    const [updatedUser, setUpdatedUser] = useState([]);\n    var user = route.params;\n    var searchResult = [];\n\n    const [searchQuery, setSearchQuery] = React.useState('');\n\n    const onChangeSearch = query => setSearchQuery(query);\n    \n    const addItem = () => {\n        //POST json\n        var dataToSend = {userId: user[0].Login, ingName: ingredientToAdd};\n        //POST request\n        fetch(addToPantryURL, {\n          method: 'POST', //Request Type\n          body: JSON.stringify(dataToSend), //post body\n          headers: {\n            //Header Defination\n            'Content-Type': \n              'application/json',\n          },\n        })\n          .then((response) => response.json())\n          //If response is in json then in success\n          .then((responseJson) => {\n              if (!responseJson.error)\n              {\n                user[0] = responseJson;\n                console.log(responseJson.Ingredient_List[1].Name);\n                alert(JSON.stringify(responseJson));\n                    //navigation.navigate('TabNavigator', {\n                      //  screen: 'Home',\n                       // params: user\n                   // });\n                   renderPantry();\n                   //navigation.navigate('Pantry', user);\n                }\n                //alert(JSON.stringify(responseJson));\n                //console.log(responseJson);\n                //console.log(user[0].Pantry.Ingredient_List[0]); // this line works sometimes\n                //console.log(user.Pantry[0].Ingredient_List[0]);\n                // navigation.navigate('TabNavigator');\n            })\n            //If response is not in json then in error\n            .catch((error) => {\n                //alert(JSON.stringify(error));\n                console.error(error);\n                // navigation.navigate('LoginScreen');\n            });\n            \n          //window.location.reload(false);\n       \n    };\n    \n    const doSearch = () => {\n        //POST json\n        var dataToSend = {userId: user[0].Login, search: searchQuery};\n        //POST request\n        fetch(searchForIngURL, {\n          method: 'POST', //Request Type\n          body: JSON.stringify(dataToSend), //post body\n          headers: {\n            //Header Defination\n            'Content-Type': \n              'application/json',\n          },\n        })\n          .then((response) => response.json())\n          //If response is in json then in success\n          .then((responseJson) => {\n              if (!responseJson.error)\n              {\n                  searchResult = responseJson;\n                // user = responseJson;\n                //     navigation.navigate('TabNavigator', {\n                //         screen: 'Home',\n                //         params: user\n                //     });\n              }\n              //alert(JSON.stringify(responseJson));\n              console.log(responseJson);\n              //console.log(user[0].Pantry.Ingredient_List[0]); // this line works sometimes\n              //console.log(user.Pantry[0].Ingredient_List[0]);\n              // navigation.navigate('TabNavigator');\n          })\n          //If response is not in json then in error\n          .catch((error) => {\n            //alert(JSON.stringify(error));\n            console.error(error);\n           // navigation.navigate('LoginScreen');\n          });\n    };\n    const renderPantry = ({item}) => {\n\n        return(\n            // <Text>{item.title}</Text>\n            <TouchableOpacity style={{\n                backgroundColor: colors.pink,\n                width: 180,\n                height: 40,\n                borderRadius: 15,\n                marginLeft: 5,\n                marginRight: 5,\n                marginVertical: 10,\n                justifyContent: 'center'\n            }}>\n                <Text style={{\n                    textAlign: 'center',\n                    color: colors.white\n                }}>{item.Name}</Text>\n            </TouchableOpacity>\n        )\n\n    };\n\n    return(\n\n        // <SafeAreaView>\n        //     <View> </View>\n        // </SafeAreaView>\n        \n        <View\n        style={{\n            backgroundColor: colors.white,\n            height: '100%'\n        }}>\n\n            \n                <View\n                    style = {{\n                        marginTop:60,\n                        backgroundColor: \"white\",\n                    }}\n                >\n                    <TouchableOpacity\n                        style = {{width: 20, marginLeft: 20, marginTop: 5}}\n                        onPress = {() => navigation.navigate('TabNavigator', {\n                            screen: 'Home',\n                            params: user\n                        })}\n                    >\n                        <MaterialIcons style={{\n                            fontSize: 30,\n                        }} name=\"arrow-back-ios\"/>\n                    </TouchableOpacity>\n                    <Text style={{\n                        fontSize: 32,\n                        fontWeight: \"bold\",\n                        //left: 90,\n                        alignSelf: 'center',\n                        bottom: 0\n                            }}\n                    >Your Pantry</Text>\n                </View>\n\n                \n\n                <View style = {{\n                    alignContent: 'center',\n                    flexDirection: 'row'\n                }}\n                >  \n                    <SearchBar \n                    inputContainerStyle={{\n                        backgroundColor: '#E3E3E3',\n                    }}\n                    containerStyle={{\n                        backgroundColor: 'white',\n                        width: '75%',\n                        borderTopColor: 'white',\n                        borderBottomColor: 'white'\n                    }}\n                    lightTheme={true}\n                    round\n                    searchIcon={{ size: 24 }}\n                    placeholder=\"Search for item...\"\n                    value={searchQuery}\n                    onChangeText={onChangeSearch}\n                    onClear={onChangeSearch}\n                    />\n\n                    <View style = {styles.centeredView}>\n                        <Modal\n                            animationType = \"slide\"\n                            transparent = {true}\n                            visible={modalVisible}\n                            onRequestClose={() =>{\n                                setModalVisible(!modalVisible);\n                            }}\n                            >\n                            <View style ={styles.centeredView}>\n                                <View style ={styles.modalView}>\n                                    <TouchableOpacity\n                                        style = {{\n                                            // marginBottom: 20,\n                                            marginLeft: 260,\n                                            height: 46,\n                                            // backgroundColor: '#FFB9B9',\n                                            // borderRadius: 15,\n                                            justifyContent: 'center',\n                                            alignContent:'center',\n                                            //marginTop: 10,\n\n                                        }}\n                                        onPress = {() => setModalVisible(!modalVisible)}\n                                    >\n                                        <MaterialIcons style={{\n                                            fontSize: 30,\n                                        }} name=\"cancel\"/>\n            \n                                    </TouchableOpacity>\n                                    <Text style = {{fontSize: 24, fontWeight: 'bold', paddingBottom: 10}}>Add an Ingredient</Text>\n                                    <TextInput\n                                        style = {{\n                                            borderColor: \"gray\",\n                                            width: 320,\n                                            borderWidth: 0.5,\n                                            borderRadius: 8,\n                                            padding: 10,\n                                            // top: 400,\n                                            justifyContent: 'center',\n                                            alignSelf: 'center',\n                                            marginBottom: 10,\n                                            // position: 'absolute'\n                                        }}\n                                        placeholder = \"Add Ingredient\"\n                                        placeholderTextColor = \"grey\"\n                                        onChangeText = {ingredientToAdd => setIngredientToAdd(ingredientToAdd)}\n                                        //value = {text}\n                                    >\n                                    </TextInput>\n                                    <TouchableOpacity\n                                        onPress = {addItem}\n                                        // underlayColor = \"#FFB9B9\"\n                                        style = {\n                                            {\n                                                width: 90,\n                                                height: 46,\n                                                backgroundColor: '#FFB9B9',\n                                                borderRadius: 15,\n                                                justifyContent: 'center',\n                                                alignContent:'center',\n                                                marginTop: 10,\n                                                // alignSelf: 'center',\n                                                // marginLeft: 110,\n                                            }\n                                        }\n                                        >\n                                        <Text style = {{\n                                            textAlign: 'center',\n                                            justifyContent: 'center',\n                                            alignSelf: 'center',\n                                            color: 'white'\n                                        }}>\n                                            Add Item\n                                        </Text>\n                                    \n                                    </TouchableOpacity>\n                                    <Text style={{fontWeight: 'bold', fontSize: 24, paddingTop: 20, paddingBottom: 10}}>Search for Recipes</Text>\n                                    <TextInput\n                                        style = {{\n                                            borderColor: \"gray\",\n                                            width: 320,\n                                            borderWidth: 0.5,\n                                            borderRadius: 8,\n                                            padding: 10,\n                                            // top: 400,\n                                            justifyContent: 'center',\n                                            alignSelf: 'center',\n                                            marginBottom: 10,\n                                            // position: 'absolute'\n                                        }}\n                                        placeholder = \"How many recipes?\"\n                                        placeholderTextColor = \"grey\"\n                                        //onChangeText = {username => setUsername(username)}\n                                        //value = {text}\n                                    >\n                                    </TextInput>\n                                    <TouchableOpacity\n                                        //onPress = {addItem}\n                                        // underlayColor = \"#FFB9B9\"\n                                        style = {\n                                            {\n                                                width: 90,\n                                                height: 46,\n                                                backgroundColor: '#FFB9B9',\n                                                borderRadius: 15,\n                                                justifyContent: 'center',\n                                                alignContent:'center',\n                                                marginTop: 10,\n                                                // alignSelf: 'center',\n                                                // marginLeft: 110,\n                                            }\n                                        }\n                                        >\n                                        <Text style = {{\n                                            textAlign: 'center',\n                                            justifyContent: 'center',\n                                            alignSelf: 'center',\n                                            color: 'white'\n                                        }}>\n                                            Search\n                                        </Text>\n                                    \n                                    </TouchableOpacity>\n                                </View>\n                            </View>\n                        </Modal>\n                        <TouchableOpacity\n                                        //onPress = {addItem}\n                                        // underlayColor = \"#FFB9B9\"\n                                        style = {\n                                            {\n                                                width: 90,\n                                                height: 46,\n                                                backgroundColor: '#FFB9B9',\n                                                borderRadius: 15,\n                                                justifyContent: 'center',\n                                                alignContent:'center',\n                                                marginRight: 10,\n                                                //marginTop: 10,\n                                                // alignSelf: 'center',\n                                                // marginLeft: 110,\n                                            }\n                                        }\n                                        onPress={() => setModalVisible(true)}\n                                        >\n                                        <Text style = {{\n                                            textAlign: 'center',\n                                            justifyContent: 'center',\n                                            alignSelf: 'center',\n                                            color: 'white'\n                                        }}>\n                                            Add Item\n                                        </Text>\n                                    \n                                    </TouchableOpacity>\n                \n                    </View>\n                    \n                </View>\n                \n                <View style={{\n                    justifyContent: 'center',\n                    alignSelf: 'center'\n                }}\n                >\n                    <FlatList \n                        data={user[0].Ingredient_List}\n                        renderItem={renderPantry}\n                        //horizontal={false}\n                        numColumns={2}\n                        key={2}\n                        //showsHorizontalScrollIndicator={false}\n                        style={{\n                            alignContent: 'center'\n                            //marginLeft: 10,\n                            //top: 15,\n                            \n                    }}> \n                    </FlatList>\n\n                </View>\n\n\n        </View>\n\n    );\n\n};\n\nexport default Pantry;"]},"metadata":{},"sourceType":"module"}